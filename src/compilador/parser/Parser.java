/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.parser;

import compilador.lexer.*;
import compilador.node.*;
import compilador.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PStart node1 = (PStart) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AStartStart */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce AAesqueletoprograma1EsqueletoPrograma */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list);
            }
            break;
            case 2: /* reduce AAesqueletoprograma2EsqueletoPrograma */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce AAesqueletoprograma3EsqueletoPrograma */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list);
            }
            break;
            case 4: /* reduce AAesqueletoprograma4EsqueletoPrograma */
            {
                ArrayList<Object> list = new4();
                push(goTo(1), list);
            }
            break;
            case 5: /* reduce ADeclaracao */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list);
            }
            break;
            case 6: /* reduce APdParteDeclaracao */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list);
            }
            break;
            case 7: /* reduce APd2ParteDeclaracao */
            {
                ArrayList<Object> list = new7();
                push(goTo(3), list);
            }
            break;
            case 8: /* reduce ADeclaracaoVariavel */
            {
                ArrayList<Object> list = new8();
                push(goTo(4), list);
            }
            break;
            case 9: /* reduce ADeclaracaoConstante */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list);
            }
            break;
            case 10: /* reduce AParteComandos */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list);
            }
            break;
            case 11: /* reduce AAtribuicaoComandos */
            {
                ArrayList<Object> list = new11();
                push(goTo(7), list);
            }
            break;
            case 12: /* reduce ALeiaComandos */
            {
                ArrayList<Object> list = new12();
                push(goTo(7), list);
            }
            break;
            case 13: /* reduce AAescrevacomandos1Comandos */
            {
                ArrayList<Object> list = new13();
                push(goTo(7), list);
            }
            break;
            case 14: /* reduce AAescrevacomandos2$1Comandos */
            {
                ArrayList<Object> list = new14();
                push(goTo(7), list);
            }
            break;
            case 15: /* reduce ACondicionalComandos */
            {
                ArrayList<Object> list = new15();
                push(goTo(7), list);
            }
            break;
            case 16: /* reduce AAavaliecomandos1Comandos */
            {
                ArrayList<Object> list = new16();
                push(goTo(7), list);
            }
            break;
            case 17: /* reduce AAavaliecomandos2Comandos */
            {
                ArrayList<Object> list = new17();
                push(goTo(7), list);
            }
            break;
            case 18: /* reduce AAavaliecomandos3Comandos */
            {
                ArrayList<Object> list = new18();
                push(goTo(7), list);
            }
            break;
            case 19: /* reduce AAavaliecomandos4Comandos */
            {
                ArrayList<Object> list = new19();
                push(goTo(7), list);
            }
            break;
            case 20: /* reduce ARepeticaoComandos */
            {
                ArrayList<Object> list = new20();
                push(goTo(7), list);
            }
            break;
            case 21: /* reduce ACondicional */
            {
                ArrayList<Object> list = new21();
                push(goTo(8), list);
            }
            break;
            case 22: /* reduce ASubCondSenao */
            {
                ArrayList<Object> list = new22();
                push(goTo(9), list);
            }
            break;
            case 23: /* reduce AVazioCondSenao */
            {
                ArrayList<Object> list = new23();
                push(goTo(9), list);
            }
            break;
            case 24: /* reduce ACondSenaoSub */
            {
                ArrayList<Object> list = new24();
                push(goTo(10), list);
            }
            break;
            case 25: /* reduce AEnquantoRepeticao */
            {
                ArrayList<Object> list = new25();
                push(goTo(11), list);
            }
            break;
            case 26: /* reduce ARepitaRepeticao */
            {
                ArrayList<Object> list = new26();
                push(goTo(11), list);
            }
            break;
            case 27: /* reduce AParaRepeticao */
            {
                ArrayList<Object> list = new27();
                push(goTo(11), list);
            }
            break;
            case 28: /* reduce AIdIdVirgula */
            {
                ArrayList<Object> list = new28();
                push(goTo(12), list);
            }
            break;
            case 29: /* reduce AIdvIdVirgula */
            {
                ArrayList<Object> list = new29();
                push(goTo(12), list);
            }
            break;
            case 30: /* reduce AExpVirgula */
            {
                ArrayList<Object> list = new30();
                push(goTo(13), list);
            }
            break;
            case 31: /* reduce AFpPvFimParaPontoVirgula */
            {
                ArrayList<Object> list = new31();
                push(goTo(14), list);
            }
            break;
            case 32: /* reduce AAtribIdAtrib1 */
            {
                ArrayList<Object> list = new32();
                push(goTo(15), list);
            }
            break;
            case 33: /* reduce AAtribNumiAtrib1 */
            {
                ArrayList<Object> list = new33();
                push(goTo(15), list);
            }
            break;
            case 34: /* reduce AAtribNumrAtrib1 */
            {
                ArrayList<Object> list = new34();
                push(goTo(15), list);
            }
            break;
            case 35: /* reduce AAtribStrAtrib1 */
            {
                ArrayList<Object> list = new35();
                push(goTo(15), list);
            }
            break;
            case 36: /* reduce APSubAteParaSub */
            {
                ArrayList<Object> list = new36();
                push(goTo(16), list);
            }
            break;
            case 37: /* reduce APSubPasso1ParaSubPasso */
            {
                ArrayList<Object> list = new37();
                push(goTo(17), list);
            }
            break;
            case 38: /* reduce APSubPasso2ParaSubPasso */
            {
                ArrayList<Object> list = new38();
                push(goTo(17), list);
            }
            break;
            case 39: /* reduce APSubAteParaSubAte */
            {
                ArrayList<Object> list = new39();
                push(goTo(18), list);
            }
            break;
            case 40: /* reduce AAvalieCaso */
            {
                ArrayList<Object> list = new40();
                push(goTo(19), list);
            }
            break;
            case 41: /* reduce AAvalieCasoSub */
            {
                ArrayList<Object> list = new41();
                push(goTo(20), list);
            }
            break;
            case 42: /* reduce AAvalieSenao */
            {
                ArrayList<Object> list = new42();
                push(goTo(21), list);
            }
            break;
            case 43: /* reduce AV1Valor */
            {
                ArrayList<Object> list = new43();
                push(goTo(22), list);
            }
            break;
            case 44: /* reduce AV2Valor */
            {
                ArrayList<Object> list = new44();
                push(goTo(22), list);
            }
            break;
            case 45: /* reduce AV3Valor */
            {
                ArrayList<Object> list = new45();
                push(goTo(22), list);
            }
            break;
            case 46: /* reduce AV1Variavel */
            {
                ArrayList<Object> list = new46();
                push(goTo(23), list);
            }
            break;
            case 47: /* reduce AV2Variavel */
            {
                ArrayList<Object> list = new47();
                push(goTo(23), list);
            }
            break;
            case 48: /* reduce ARealTipo */
            {
                ArrayList<Object> list = new48();
                push(goTo(24), list);
            }
            break;
            case 49: /* reduce AIntTipo */
            {
                ArrayList<Object> list = new49();
                push(goTo(24), list);
            }
            break;
            case 50: /* reduce ACharTipo */
            {
                ArrayList<Object> list = new50();
                push(goTo(24), list);
            }
            break;
            case 51: /* reduce AMaisSoma */
            {
                ArrayList<Object> list = new51();
                push(goTo(25), list);
            }
            break;
            case 52: /* reduce AMenosSoma */
            {
                ArrayList<Object> list = new52();
                push(goTo(25), list);
            }
            break;
            case 53: /* reduce AMultMultiplicacao */
            {
                ArrayList<Object> list = new53();
                push(goTo(26), list);
            }
            break;
            case 54: /* reduce ADivMultiplicacao */
            {
                ArrayList<Object> list = new54();
                push(goTo(26), list);
            }
            break;
            case 55: /* reduce AOpr1OpRelacional */
            {
                ArrayList<Object> list = new55();
                push(goTo(27), list);
            }
            break;
            case 56: /* reduce AOpr2OpRelacional */
            {
                ArrayList<Object> list = new56();
                push(goTo(27), list);
            }
            break;
            case 57: /* reduce AIgualOpRelacionalIgual */
            {
                ArrayList<Object> list = new57();
                push(goTo(28), list);
            }
            break;
            case 58: /* reduce ADiferenteOpRelacionalIgual */
            {
                ArrayList<Object> list = new58();
                push(goTo(28), list);
            }
            break;
            case 59: /* reduce AMenorOpRelacionalComp */
            {
                ArrayList<Object> list = new59();
                push(goTo(29), list);
            }
            break;
            case 60: /* reduce AMenorIgualOpRelacionalComp */
            {
                ArrayList<Object> list = new60();
                push(goTo(29), list);
            }
            break;
            case 61: /* reduce AMaiorOpRelacionalComp */
            {
                ArrayList<Object> list = new61();
                push(goTo(29), list);
            }
            break;
            case 62: /* reduce AMaiorIgualOpRelacionalComp */
            {
                ArrayList<Object> list = new62();
                push(goTo(29), list);
            }
            break;
            case 63: /* reduce AEOpLogico */
            {
                ArrayList<Object> list = new63();
                push(goTo(30), list);
            }
            break;
            case 64: /* reduce AOuOpLogico */
            {
                ArrayList<Object> list = new64();
                push(goTo(30), list);
            }
            break;
            case 65: /* reduce AXorOpLogico */
            {
                ArrayList<Object> list = new65();
                push(goTo(30), list);
            }
            break;
            case 66: /* reduce AOuOpLogicoOu */
            {
                ArrayList<Object> list = new66();
                push(goTo(31), list);
            }
            break;
            case 67: /* reduce AXorOpLogicoOu */
            {
                ArrayList<Object> list = new67();
                push(goTo(31), list);
            }
            break;
            case 68: /* reduce AE1ExpressaoGeral */
            {
                ArrayList<Object> list = new68();
                push(goTo(32), list);
            }
            break;
            case 69: /* reduce AE2ExpressaoGeral */
            {
                ArrayList<Object> list = new69();
                push(goTo(32), list);
            }
            break;
            case 70: /* reduce AExp1Expressao */
            {
                ArrayList<Object> list = new70();
                push(goTo(33), list);
            }
            break;
            case 71: /* reduce AExp2Expressao */
            {
                ArrayList<Object> list = new71();
                push(goTo(33), list);
            }
            break;
            case 72: /* reduce ATermoExpressao */
            {
                ArrayList<Object> list = new72();
                push(goTo(33), list);
            }
            break;
            case 73: /* reduce ATerm1Termo */
            {
                ArrayList<Object> list = new73();
                push(goTo(34), list);
            }
            break;
            case 74: /* reduce ATerm2Termo */
            {
                ArrayList<Object> list = new74();
                push(goTo(34), list);
            }
            break;
            case 75: /* reduce AFatorTermo */
            {
                ArrayList<Object> list = new75();
                push(goTo(34), list);
            }
            break;
            case 76: /* reduce AFator1Fator */
            {
                ArrayList<Object> list = new76();
                push(goTo(35), list);
            }
            break;
            case 77: /* reduce AValorFator */
            {
                ArrayList<Object> list = new77();
                push(goTo(35), list);
            }
            break;
            case 78: /* reduce AVariavelFator */
            {
                ArrayList<Object> list = new78();
                push(goTo(35), list);
            }
            break;
            case 79: /* reduce AExpl1ExpressaoLogica */
            {
                ArrayList<Object> list = new79();
                push(goTo(36), list);
            }
            break;
            case 80: /* reduce AExpl2ExpressaoLogica */
            {
                ArrayList<Object> list = new80();
                push(goTo(36), list);
            }
            break;
            case 81: /* reduce ATermol1TermoLog */
            {
                ArrayList<Object> list = new81();
                push(goTo(37), list);
            }
            break;
            case 82: /* reduce ATermol2TermoLog */
            {
                ArrayList<Object> list = new82();
                push(goTo(37), list);
            }
            break;
            case 83: /* reduce AExpr1ExpRel */
            {
                ArrayList<Object> list = new83();
                push(goTo(38), list);
            }
            break;
            case 84: /* reduce AExpr2ExpRel */
            {
                ArrayList<Object> list = new84();
                push(goTo(38), list);
            }
            break;
            case 85: /* reduce ATermor1TermoRel */
            {
                ArrayList<Object> list = new85();
                push(goTo(39), list);
            }
            break;
            case 86: /* reduce ATermor2TermoRel */
            {
                ArrayList<Object> list = new86();
                push(goTo(39), list);
            }
            break;
            case 87: /* reduce AFr1FatorRel */
            {
                ArrayList<Object> list = new87();
                push(goTo(40), list);
            }
            break;
            case 88: /* reduce AFr2FatorRel */
            {
                ArrayList<Object> list = new88();
                push(goTo(40), list);
            }
            break;
            case 89: /* reduce AFr3FatorRel */
            {
                ArrayList<Object> list = new89();
                push(goTo(40), list);
            }
            break;
            case 90: /* reduce AFr4FatorRel */
            {
                ArrayList<Object> list = new90();
                push(goTo(40), list);
            }
            break;
            case 91: /* reduce AParen */
            {
                ArrayList<Object> list = new91();
                push(goTo(41), list);
            }
            break;
            case 92: /* reduce ATerminal$ParteDeclaracao */
            {
                ArrayList<Object> list = new92();
                push(goTo(42), list);
            }
            break;
            case 93: /* reduce ANonTerminal$ParteDeclaracao */
            {
                ArrayList<Object> list = new93();
                push(goTo(42), list);
            }
            break;
            case 94: /* reduce ATerminal$Comandos */
            {
                ArrayList<Object> list = new94();
                push(goTo(43), list);
            }
            break;
            case 95: /* reduce ANonTerminal$Comandos */
            {
                ArrayList<Object> list = new95();
                push(goTo(43), list);
            }
            break;
            case 96: /* reduce ATerminal$ExpVirgula */
            {
                ArrayList<Object> list = new96();
                push(goTo(44), list);
            }
            break;
            case 97: /* reduce ANonTerminal$ExpVirgula */
            {
                ArrayList<Object> list = new97();
                push(goTo(44), list);
            }
            break;
            case 98: /* reduce ATerminal$AvalieCasoSub */
            {
                ArrayList<Object> list = new98();
                push(goTo(45), list);
            }
            break;
            case 99: /* reduce ANonTerminal$AvalieCasoSub */
            {
                ArrayList<Object> list = new99();
                push(goTo(45), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AStartStart */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStart pstartNode1;
        {
            // Block
        PEsqueletoPrograma pesqueletoprogramaNode2;
        pesqueletoprogramaNode2 = (PEsqueletoPrograma)nodeArrayList1.get(0);

        pstartNode1 = new AStart(pesqueletoprogramaNode2);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAesqueletoprograma1EsqueletoPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEsqueletoPrograma pesqueletoprogramaNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        tidentificadorNode2 = (TIdentificador)nodeArrayList2.get(0);
        {
            // Block
        }
        {
            // Block
        }

        pesqueletoprogramaNode1 = new AEsqueletoPrograma(tidentificadorNode2, listNode3, listNode4);
        }
	nodeList.add(pesqueletoprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAesqueletoprograma2EsqueletoPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEsqueletoPrograma pesqueletoprogramaNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        tidentificadorNode2 = (TIdentificador)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }

        pesqueletoprogramaNode1 = new AEsqueletoPrograma(tidentificadorNode2, listNode4, listNode5);
        }
	nodeList.add(pesqueletoprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAesqueletoprograma3EsqueletoPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEsqueletoPrograma pesqueletoprogramaNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        tidentificadorNode2 = (TIdentificador)nodeArrayList2.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList5.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pesqueletoprogramaNode1 = new AEsqueletoPrograma(tidentificadorNode2, listNode3, listNode5);
        }
	nodeList.add(pesqueletoprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AAesqueletoprograma4EsqueletoPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEsqueletoPrograma pesqueletoprogramaNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        tidentificadorNode2 = (TIdentificador)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList6.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pesqueletoprogramaNode1 = new AEsqueletoPrograma(tidentificadorNode2, listNode4, listNode6);
        }
	nodeList.add(pesqueletoprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ADeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        listNode1 = (LinkedList)nodeArrayList1.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce APdParteDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteDeclaracao ppartedeclaracaoNode1;
        ppartedeclaracaoNode1 = (PParteDeclaracao)nodeArrayList1.get(0);
	nodeList.add(ppartedeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce APd2ParteDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteDeclaracao ppartedeclaracaoNode1;
        ppartedeclaracaoNode1 = (PParteDeclaracao)nodeArrayList1.get(0);
	nodeList.add(ppartedeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ADeclaracaoVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteDeclaracao ppartedeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        PIdVirgula pidvirgulaNode3;
        ptipoNode2 = (PTipo)nodeArrayList2.get(0);
        pidvirgulaNode3 = (PIdVirgula)nodeArrayList4.get(0);

        ppartedeclaracaoNode1 = new ADeclaracaoVariavelParteDeclaracao(ptipoNode2, pidvirgulaNode3);
        }
	nodeList.add(ppartedeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce ADeclaracaoConstante */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteDeclaracao ppartedeclaracaoNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        PValor pvalorNode3;
        tidentificadorNode2 = (TIdentificador)nodeArrayList2.get(0);
        pvalorNode3 = (PValor)nodeArrayList3.get(0);

        ppartedeclaracaoNode1 = new ADeclaracaoConstanteParteDeclaracao(tidentificadorNode2, pvalorNode3);
        }
	nodeList.add(ppartedeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AParteComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        listNode1 = (LinkedList)nodeArrayList1.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AAtribuicaoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        PExpressao pexpressaoNode3;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList3.get(0);

        pcomandosNode1 = new AAtribuicaoComandos(pvariavelNode2, pexpressaoNode3);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce ALeiaComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PIdVirgula pidvirgulaNode2;
        pidvirgulaNode2 = (PIdVirgula)nodeArrayList3.get(0);

        pcomandosNode1 = new ALeiaComandos(pidvirgulaNode2);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AAescrevacomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PExpressao pexpressaoNode3;
        {
            // Block
        }
        pexpressaoNode3 = (PExpressao)nodeArrayList3.get(0);

        pcomandosNode1 = new AEscrevaComandos(listNode2, pexpressaoNode3);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AAescrevacomandos2$1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressao pexpressaoNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pexpressaoNode4 = (PExpressao)nodeArrayList4.get(0);

        pcomandosNode1 = new AEscrevaComandos(listNode3, pexpressaoNode4);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce ACondicionalComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PCondicional pcondicionalNode2;
        pcondicionalNode2 = (PCondicional)nodeArrayList1.get(0);

        pcomandosNode1 = new ACondicionalComandos(pcondicionalNode2);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAavaliecomandos1Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        pexpressaoNode2 = (PExpressao)nodeArrayList3.get(0);

        pcomandosNode1 = new AAvalieComandos(pexpressaoNode2);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAavaliecomandos2Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        pexpressaoNode2 = (PExpressao)nodeArrayList3.get(0);

        pcomandosNode1 = new AAvalieComandos(pexpressaoNode2);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAavaliecomandos3Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        pexpressaoNode2 = (PExpressao)nodeArrayList3.get(0);

        pcomandosNode1 = new AAvalieComandos(pexpressaoNode2);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AAavaliecomandos4Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        pexpressaoNode2 = (PExpressao)nodeArrayList3.get(0);

        pcomandosNode1 = new AAvalieComandos(pexpressaoNode2);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ARepeticaoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandos pcomandosNode1;
        {
            // Block
        PRepeticao prepeticaoNode2;
        prepeticaoNode2 = (PRepeticao)nodeArrayList1.get(0);

        pcomandosNode1 = new ARepeticaoComandos(prepeticaoNode2);
        }
	nodeList.add(pcomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce ACondicional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCondicional pcondicionalNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList6.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pcondicionalNode1 = new ACondicional(pexpressaologicaNode2, listNode4);
        }
	nodeList.add(pcondicionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce ASubCondSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCondSenao pcondsenaoNode1;
        {
            // Block
        PCondSenaoSub pcondsenaosubNode2;
        pcondsenaosubNode2 = (PCondSenaoSub)nodeArrayList1.get(0);

        pcondsenaoNode1 = new ACondSenao(pcondsenaosubNode2);
        }
	nodeList.add(pcondsenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AVazioCondSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PCondSenao pcondsenaoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;

        pcondsenaoNode1 = new ACondSenao(null);
        }
	nodeList.add(pcondsenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce ACondSenaoSub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCondSenaoSub pcondsenaosubNode1;
        {
            // Block
        TSenao tsenaoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pcondsenaosubNode1 = new ACondSenaoSub(tsenaoNode2, listNode4);
        }
	nodeList.add(pcondsenaosubNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AEnquantoRepeticao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeticao prepeticaoNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList6.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        prepeticaoNode1 = new AEnquantoRepeticao(pexpressaologicaNode2, listNode4);
        }
	nodeList.add(prepeticaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce ARepitaRepeticao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeticao prepeticaoNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpressaoLogica pexpressaologicaNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList5.get(0);

        prepeticaoNode1 = new ARepitaRepeticao(listNode3, pexpressaologicaNode4);
        }
	nodeList.add(prepeticaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AParaRepeticao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeticao prepeticaoNode1;
        {
            // Block
        TNumeroInteiro tnumerointeiroNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        tnumerointeiroNode2 = (TNumeroInteiro)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList6.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        prepeticaoNode1 = new AParaRepeticao(tnumerointeiroNode2, listNode4);
        }
	nodeList.add(prepeticaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AIdIdVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdVirgula pidvirgulaNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pidvirgulaNode1 = new AIdIdVirgula(pvariavelNode2);
        }
	nodeList.add(pidvirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AIdvIdVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdVirgula pidvirgulaNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        PIdVirgula pidvirgulaNode3;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);
        pidvirgulaNode3 = (PIdVirgula)nodeArrayList3.get(0);

        pidvirgulaNode1 = new AIdvirgulaIdVirgula(pvariavelNode2, pidvirgulaNode3);
        }
	nodeList.add(pidvirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AExpVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVirgula pexpvirgulaNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);

        pexpvirgulaNode1 = new AExpVirgula(pexpressaoNode2);
        }
	nodeList.add(pexpvirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AFpPvFimParaPontoVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AAtribIdAtrib1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib1 patrib1Node1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        patrib1Node1 = new AIdentificadorAtrib1(tidentificadorNode2);
        }
	nodeList.add(patrib1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AAtribNumiAtrib1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib1 patrib1Node1;
        {
            // Block
        TNumeroInteiro tnumerointeiroNode2;
        tnumerointeiroNode2 = (TNumeroInteiro)nodeArrayList1.get(0);

        patrib1Node1 = new ANumeroInteiroAtrib1(tnumerointeiroNode2);
        }
	nodeList.add(patrib1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AAtribNumrAtrib1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib1 patrib1Node1;
        {
            // Block
        TNumeroReal tnumerorealNode2;
        tnumerorealNode2 = (TNumeroReal)nodeArrayList1.get(0);

        patrib1Node1 = new ANumeroRealAtrib1(tnumerorealNode2);
        }
	nodeList.add(patrib1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AAtribStrAtrib1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib1 patrib1Node1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        patrib1Node1 = new AStringAtrib1(tstringNode2);
        }
	nodeList.add(patrib1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce APSubAteParaSub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaSub pparasubNode1;
        {
            // Block
        TAte tateNode2;
        TNumeroInteiro tnumerointeiroNode3;
        PParaSubPasso pparasubpassoNode4;
        tateNode2 = (TAte)nodeArrayList1.get(0);
        tnumerointeiroNode3 = (TNumeroInteiro)nodeArrayList2.get(0);
        pparasubpassoNode4 = (PParaSubPasso)nodeArrayList3.get(0);

        pparasubNode1 = new AParaSub(tateNode2, tnumerointeiroNode3, pparasubpassoNode4);
        }
	nodeList.add(pparasubNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce APSubPasso1ParaSubPasso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaSubPasso pparasubpassoNode1;
        {
            // Block
        TPasso tpassoNode2;
        TNumeroInteiro tnumerointeiroNode3;
        PParaSubAte pparasubateNode4;
        tpassoNode2 = (TPasso)nodeArrayList1.get(0);
        tnumerointeiroNode3 = (TNumeroInteiro)nodeArrayList2.get(0);
        pparasubateNode4 = (PParaSubAte)nodeArrayList3.get(0);

        pparasubpassoNode1 = new APassoateParaSubPasso(tpassoNode2, tnumerointeiroNode3, pparasubateNode4);
        }
	nodeList.add(pparasubpassoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce APSubPasso2ParaSubPasso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaSubPasso pparasubpassoNode1;
        {
            // Block
        PParaSubAte pparasubateNode2;
        pparasubateNode2 = (PParaSubAte)nodeArrayList1.get(0);

        pparasubpassoNode1 = new AAteParaSubPasso(pparasubateNode2);
        }
	nodeList.add(pparasubpassoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce APSubAteParaSubAte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaSubAte pparasubateNode1;
        {
            // Block
        TAte tateNode2;
        TNumeroInteiro tnumerointeiroNode3;
        tateNode2 = (TAte)nodeArrayList1.get(0);
        tnumerointeiroNode3 = (TNumeroInteiro)nodeArrayList2.get(0);

        pparasubateNode1 = new AParaSubAte(tateNode2, tnumerointeiroNode3);
        }
	nodeList.add(pparasubateNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AAvalieCaso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        listNode1 = (LinkedList)nodeArrayList1.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AAvalieCasoSub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAvalieCasoSub pavaliecasosubNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList4.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pavaliecasosubNode1 = new AAvalieCasoSub(listNode3);
        }
	nodeList.add(pavaliecasosubNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AAvalieSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAvalieSenao pavaliesenaoNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pavaliesenaoNode1 = new AAvalieSenao(listNode3);
        }
	nodeList.add(pavaliesenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AV1Valor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStringValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AV2Valor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumeroInteiro tnumerointeiroNode2;
        tnumerointeiroNode2 = (TNumeroInteiro)nodeArrayList1.get(0);

        pvalorNode1 = new ANumeroInteiroValor(tnumerointeiroNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AV3Valor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumeroReal tnumerorealNode2;
        tnumerorealNode2 = (TNumeroReal)nodeArrayList1.get(0);

        pvalorNode1 = new ANumeroRealValor(tnumerorealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AV1Variavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvariavelNode1 = new AIdentificadorVariavel(tidentificadorNode2);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AV2Variavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TNumeroInteiro tnumerointeiroNode3;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tnumerointeiroNode3 = (TNumeroInteiro)nodeArrayList3.get(0);

        pvariavelNode1 = new AVetorVariavel(tidentificadorNode2, tnumerointeiroNode3);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce ARealTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoNode1 = new ARealTipo(trealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AIntTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AInteiroTipo(tinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ACharTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ACaractereTipo(tcaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AMaisSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AMenosSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AMultMultiplicacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce ADivMultiplicacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AOpr1OpRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AOpr2OpRelacional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AIgualOpRelacionalIgual */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRelacionalIgual poprelacionaligualNode1;
        {
            // Block
        TIgual tigualNode2;
        tigualNode2 = (TIgual)nodeArrayList1.get(0);

        poprelacionaligualNode1 = new AIgualOpRelacionalIgual(tigualNode2);
        }
	nodeList.add(poprelacionaligualNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ADiferenteOpRelacionalIgual */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRelacionalIgual poprelacionaligualNode1;
        {
            // Block
        TDiferente tdiferenteNode2;
        tdiferenteNode2 = (TDiferente)nodeArrayList1.get(0);

        poprelacionaligualNode1 = new ADiferenteOpRelacionalIgual(tdiferenteNode2);
        }
	nodeList.add(poprelacionaligualNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AMenorOpRelacionalComp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRelacionalComp poprelacionalcompNode1;
        {
            // Block
        TMenor tmenorNode2;
        tmenorNode2 = (TMenor)nodeArrayList1.get(0);

        poprelacionalcompNode1 = new AMenorOpRelacionalComp(tmenorNode2);
        }
	nodeList.add(poprelacionalcompNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AMenorIgualOpRelacionalComp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRelacionalComp poprelacionalcompNode1;
        {
            // Block
        TMenorIgual tmenorigualNode2;
        tmenorigualNode2 = (TMenorIgual)nodeArrayList1.get(0);

        poprelacionalcompNode1 = new AMenorIgualOpRelacionalComp(tmenorigualNode2);
        }
	nodeList.add(poprelacionalcompNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AMaiorOpRelacionalComp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRelacionalComp poprelacionalcompNode1;
        {
            // Block
        TMaior tmaiorNode2;
        tmaiorNode2 = (TMaior)nodeArrayList1.get(0);

        poprelacionalcompNode1 = new AMaiorOpRelacionalComp(tmaiorNode2);
        }
	nodeList.add(poprelacionalcompNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AMaiorIgualOpRelacionalComp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpRelacionalComp poprelacionalcompNode1;
        {
            // Block
        TMaiorIgual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorIgual)nodeArrayList1.get(0);

        poprelacionalcompNode1 = new AMaiorIgualOpRelacionalComp(tmaiorigualNode2);
        }
	nodeList.add(poprelacionalcompNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AEOpLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AOuOpLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AXorOpLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AOuOpLogicoOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpLogicoOu poplogicoouNode1;
        {
            // Block
        TOu touNode2;
        touNode2 = (TOu)nodeArrayList1.get(0);

        poplogicoouNode1 = new AOuOpLogicoOu(touNode2);
        }
	nodeList.add(poplogicoouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AXorOpLogicoOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpLogicoOu poplogicoouNode1;
        {
            // Block
        TXor txorNode2;
        txorNode2 = (TXor)nodeArrayList1.get(0);

        poplogicoouNode1 = new AXorOpLogicoOu(txorNode2);
        }
	nodeList.add(poplogicoouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AE1ExpressaoGeral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AE2ExpressaoGeral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AExp1Expressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        PTermo ptermoNode3;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        ptermoNode3 = (PTermo)nodeArrayList3.get(0);

        pexpressaoNode1 = new AMaisExpressao(pexpressaoNode2, ptermoNode3);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AExp2Expressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        PTermo ptermoNode3;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        ptermoNode3 = (PTermo)nodeArrayList3.get(0);

        pexpressaoNode1 = new AMenosExpressao(pexpressaoNode2, ptermoNode3);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ATermoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpressaoNode1 = new ATermoExpressao(ptermoNode2);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ATerm1Termo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        PFator pfatorNode3;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        pfatorNode3 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new AMultTermo(ptermoNode2, pfatorNode3);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce ATerm2Termo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        PFator pfatorNode3;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        pfatorNode3 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new ADivisaoTermo(ptermoNode2, pfatorNode3);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AFatorTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new AFatorTermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce AFator1Fator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TAbreParen tabreparenNode2;
        PExpressao pexpressaoNode3;
        TFechaParen tfechaparenNode4;
        tabreparenNode2 = (TAbreParen)nodeArrayList1.get(0);
        pexpressaoNode3 = (PExpressao)nodeArrayList2.get(0);
        tfechaparenNode4 = (TFechaParen)nodeArrayList3.get(0);

        pfatorNode1 = new AParenFator(tabreparenNode2, pexpressaoNode3, tfechaparenNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AValorFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatorNode1 = new AValorFator(pvalorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AVariavelFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pfatorNode1 = new AVariavelFator(pvariavelNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AExpl1ExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressaoLogica pexpressaologicaNode2;
        POpLogicoOu poplogicoouNode3;
        PTermoLog ptermologNode4;
        pexpressaologicaNode2 = (PExpressaoLogica)nodeArrayList1.get(0);
        poplogicoouNode3 = (POpLogicoOu)nodeArrayList2.get(0);
        ptermologNode4 = (PTermoLog)nodeArrayList3.get(0);

        pexpressaologicaNode1 = new AOpLogicoExpressaoLogica(pexpressaologicaNode2, poplogicoouNode3, ptermologNode4);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AExpl2ExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PTermoLog ptermologNode2;
        ptermologNode2 = (PTermoLog)nodeArrayList1.get(0);

        pexpressaologicaNode1 = new ATermoLogExpressaoLogica(ptermologNode2);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce ATermol1TermoLog */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoLog ptermologNode1;
        {
            // Block
        PTermoLog ptermologNode2;
        TE teNode3;
        PExpRel pexprelNode4;
        ptermologNode2 = (PTermoLog)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        pexprelNode4 = (PExpRel)nodeArrayList3.get(0);

        ptermologNode1 = new AETermoLog(ptermologNode2, teNode3, pexprelNode4);
        }
	nodeList.add(ptermologNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce ATermol2TermoLog */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoLog ptermologNode1;
        {
            // Block
        PExpRel pexprelNode2;
        pexprelNode2 = (PExpRel)nodeArrayList1.get(0);

        ptermologNode1 = new AExpRelTermoLog(pexprelNode2);
        }
	nodeList.add(ptermologNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AExpr1ExpRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpRel pexprelNode1;
        {
            // Block
        PFatorRel pfatorrelNode2;
        POpRelacionalIgual poprelacionaligualNode3;
        PTermoRel ptermorelNode4;
        pfatorrelNode2 = (PFatorRel)nodeArrayList1.get(0);
        poprelacionaligualNode3 = (POpRelacionalIgual)nodeArrayList2.get(0);
        ptermorelNode4 = (PTermoRel)nodeArrayList3.get(0);

        pexprelNode1 = new AIgualExpRel(pfatorrelNode2, poprelacionaligualNode3, ptermorelNode4);
        }
	nodeList.add(pexprelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce AExpr2ExpRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpRel pexprelNode1;
        {
            // Block
        PTermoRel ptermorelNode2;
        ptermorelNode2 = (PTermoRel)nodeArrayList1.get(0);

        pexprelNode1 = new ATermoRelExpRel(ptermorelNode2);
        }
	nodeList.add(pexprelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce ATermor1TermoRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoRel ptermorelNode1;
        {
            // Block
        PTermoRel ptermorelNode2;
        POpRelacionalComp poprelacionalcompNode3;
        PFatorRel pfatorrelNode4;
        ptermorelNode2 = (PTermoRel)nodeArrayList1.get(0);
        poprelacionalcompNode3 = (POpRelacionalComp)nodeArrayList2.get(0);
        pfatorrelNode4 = (PFatorRel)nodeArrayList3.get(0);

        ptermorelNode1 = new ACompTermoRel(ptermorelNode2, poprelacionalcompNode3, pfatorrelNode4);
        }
	nodeList.add(ptermorelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce ATermor2TermoRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoRel ptermorelNode1;
        {
            // Block
        PFatorRel pfatorrelNode2;
        pfatorrelNode2 = (PFatorRel)nodeArrayList1.get(0);

        ptermorelNode1 = new AFatorRelTermoRel(pfatorrelNode2);
        }
	nodeList.add(ptermorelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce AFr1FatorRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorRel pfatorrelNode1;
        {
            // Block
        PParen pparenNode2;
        pparenNode2 = (PParen)nodeArrayList1.get(0);

        pfatorrelNode1 = new AParenFatorRel(pparenNode2);
        }
	nodeList.add(pfatorrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce AFr2FatorRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorRel pfatorrelNode1;
        {
            // Block
        TNao tnaoNode2;
        PParen pparenNode3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        pparenNode3 = (PParen)nodeArrayList2.get(0);

        pfatorrelNode1 = new ANaoparenFatorRel(tnaoNode2, pparenNode3);
        }
	nodeList.add(pfatorrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce AFr3FatorRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorRel pfatorrelNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatorrelNode1 = new AValorFatorRel(pvalorNode2);
        }
	nodeList.add(pfatorrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce AFr4FatorRel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFatorRel pfatorrelNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pfatorrelNode1 = new AVariavelFatorRel(pvariavelNode2);
        }
	nodeList.add(pfatorrelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce AParen */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParen pparenNode1;
        {
            // Block
        TAbreParen tabreparenNode2;
        PExpressaoLogica pexpressaologicaNode3;
        TFechaParen tfechaparenNode4;
        tabreparenNode2 = (TAbreParen)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList2.get(0);
        tfechaparenNode4 = (TFechaParen)nodeArrayList3.get(0);

        pparenNode1 = new AParen(tabreparenNode2, pexpressaologicaNode3, tfechaparenNode4);
        }
	nodeList.add(pparenNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce ATerminal$ParteDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PParteDeclaracao ppartedeclaracaoNode1;
        ppartedeclaracaoNode1 = (PParteDeclaracao)nodeArrayList1.get(0);
	if(ppartedeclaracaoNode1 != null)
	{
	  listNode2.add(ppartedeclaracaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce ANonTerminal$ParteDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PParteDeclaracao ppartedeclaracaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ppartedeclaracaoNode2 = (PParteDeclaracao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ppartedeclaracaoNode2 != null)
	{
	  listNode3.add(ppartedeclaracaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce ATerminal$Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComandos pcomandosNode1;
        pcomandosNode1 = (PComandos)nodeArrayList1.get(0);
	if(pcomandosNode1 != null)
	{
	  listNode2.add(pcomandosNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce ANonTerminal$Comandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComandos pcomandosNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandosNode2 = (PComandos)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandosNode2 != null)
	{
	  listNode3.add(pcomandosNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce ATerminal$ExpVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExpVirgula pexpvirgulaNode1;
        pexpvirgulaNode1 = (PExpVirgula)nodeArrayList1.get(0);
	if(pexpvirgulaNode1 != null)
	{
	  listNode2.add(pexpvirgulaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce ANonTerminal$ExpVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExpVirgula pexpvirgulaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexpvirgulaNode2 = (PExpVirgula)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexpvirgulaNode2 != null)
	{
	  listNode3.add(pexpvirgulaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce ATerminal$AvalieCasoSub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PAvalieCasoSub pavaliecasosubNode1;
        pavaliecasosubNode1 = (PAvalieCasoSub)nodeArrayList1.get(0);
	if(pavaliecasosubNode1 != null)
	{
	  listNode2.add(pavaliecasosubNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce ANonTerminal$AvalieCasoSub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PAvalieCasoSub pavaliecasosubNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pavaliecasosubNode2 = (PAvalieCasoSub)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pavaliecasosubNode2 != null)
	{
	  listNode3.add(pavaliecasosubNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {33, SHIFT, 1}, },
			{{-1, ERROR, 1}, {59, SHIFT, 4}, },
			{{-1, ERROR, 2}, {60, ACCEPT, -1}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 4}, {19, SHIFT, 5}, },
			{{-1, ERROR, 5}, {34, SHIFT, 6}, {47, SHIFT, 7}, {58, SHIFT, 8}, },
			{{-1, ERROR, 6}, {54, SHIFT, 14}, {55, SHIFT, 15}, {56, SHIFT, 16}, },
			{{-1, ERROR, 7}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {48, SHIFT, 25}, {59, SHIFT, 26}, },
			{{-1, ERROR, 8}, {59, SHIFT, 33}, },
			{{-1, ERROR, 9}, {47, SHIFT, 34}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 5}, {34, SHIFT, 6}, {58, SHIFT, 8}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 17}, {30, SHIFT, 36}, },
			{{-1, ERROR, 18}, {21, SHIFT, 37}, },
			{{-1, ERROR, 19}, {21, SHIFT, 38}, },
			{{-1, ERROR, 20}, {21, SHIFT, 39}, },
			{{-1, ERROR, 21}, {21, SHIFT, 40}, },
			{{-1, ERROR, 22}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {59, SHIFT, 26}, },
			{{-1, ERROR, 23}, {59, SHIFT, 42}, },
			{{-1, ERROR, 24}, {21, SHIFT, 43}, },
			{{-1, REDUCE, 1}, },
			{{-1, REDUCE, 46}, {23, SHIFT, 44}, },
			{{-1, ERROR, 27}, {48, SHIFT, 45}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 31}, {15, SHIFT, 46}, },
			{{-1, REDUCE, 10}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {59, SHIFT, 26}, },
			{{-1, ERROR, 33}, {1, SHIFT, 48}, {2, SHIFT, 49}, {57, SHIFT, 50}, },
			{{-1, ERROR, 34}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {48, SHIFT, 52}, {59, SHIFT, 26}, },
			{{-1, REDUCE, 93}, },
			{{-1, ERROR, 36}, {59, SHIFT, 26}, },
			{{-1, ERROR, 37}, {59, SHIFT, 26}, },
			{{-1, ERROR, 38}, {1, SHIFT, 48}, {2, SHIFT, 49}, {21, SHIFT, 57}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, ERROR, 39}, {1, SHIFT, 48}, {2, SHIFT, 49}, {6, SHIFT, 65}, {21, SHIFT, 66}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, ERROR, 40}, {1, SHIFT, 48}, {2, SHIFT, 49}, {6, SHIFT, 65}, {21, SHIFT, 66}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, ERROR, 41}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {41, SHIFT, 76}, {42, SHIFT, 23}, {45, SHIFT, 24}, {59, SHIFT, 26}, },
			{{-1, ERROR, 42}, {43, SHIFT, 77}, },
			{{-1, ERROR, 43}, {1, SHIFT, 48}, {2, SHIFT, 49}, {21, SHIFT, 57}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, ERROR, 44}, {2, SHIFT, 79}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 46}, {1, SHIFT, 48}, {2, SHIFT, 49}, {21, SHIFT, 57}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, REDUCE, 95}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 43}, },
			{{-1, ERROR, 51}, {19, SHIFT, 81}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 53}, {48, SHIFT, 82}, },
			{{-1, ERROR, 54}, {19, SHIFT, 83}, },
			{{-1, REDUCE, 28}, {20, SHIFT, 84}, },
			{{-1, ERROR, 56}, {22, SHIFT, 85}, },
			{{-1, ERROR, 57}, {1, SHIFT, 48}, {2, SHIFT, 49}, {21, SHIFT, 57}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, REDUCE, 96}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 78}, },
			{{-1, ERROR, 61}, {7, SHIFT, 87}, {8, SHIFT, 88}, {20, SHIFT, 89}, {22, SHIFT, 90}, },
			{{-1, REDUCE, 72}, {9, SHIFT, 91}, {10, SHIFT, 92}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 64}, {1, SHIFT, 48}, {2, SHIFT, 49}, {21, SHIFT, 57}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, ERROR, 65}, {21, SHIFT, 66}, },
			{{-1, ERROR, 66}, {1, SHIFT, 48}, {2, SHIFT, 49}, {6, SHIFT, 65}, {21, SHIFT, 66}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 90}, },
			{{-1, ERROR, 69}, {4, SHIFT, 97}, {5, SHIFT, 98}, {22, SHIFT, 99}, },
			{{-1, REDUCE, 80}, {3, SHIFT, 101}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 84}, {11, SHIFT, 102}, {12, SHIFT, 103}, {13, SHIFT, 104}, {14, SHIFT, 105}, },
			{{-1, REDUCE, 86}, {17, SHIFT, 107}, {18, SHIFT, 108}, },
			{{-1, REDUCE, 87}, },
			{{-1, ERROR, 75}, {4, SHIFT, 97}, {5, SHIFT, 98}, {22, SHIFT, 110}, },
			{{-1, ERROR, 76}, {21, SHIFT, 111}, },
			{{-1, ERROR, 77}, {2, SHIFT, 112}, },
			{{-1, ERROR, 78}, {7, SHIFT, 87}, {8, SHIFT, 88}, {22, SHIFT, 113}, },
			{{-1, ERROR, 79}, {24, SHIFT, 114}, },
			{{-1, ERROR, 80}, {7, SHIFT, 87}, {8, SHIFT, 88}, {19, SHIFT, 115}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 8}, },
			{{-1, ERROR, 84}, {59, SHIFT, 26}, },
			{{-1, ERROR, 85}, {19, SHIFT, 117}, },
			{{-1, ERROR, 86}, {7, SHIFT, 87}, {8, SHIFT, 88}, {22, SHIFT, 118}, },
			{{-1, ERROR, 87}, {1, SHIFT, 48}, {2, SHIFT, 49}, {21, SHIFT, 57}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, ERROR, 88}, {1, SHIFT, 48}, {2, SHIFT, 49}, {21, SHIFT, 57}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 90}, {19, SHIFT, 121}, },
			{{-1, ERROR, 91}, {1, SHIFT, 48}, {2, SHIFT, 49}, {21, SHIFT, 57}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, ERROR, 92}, {1, SHIFT, 48}, {2, SHIFT, 49}, {21, SHIFT, 57}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, REDUCE, 97}, },
			{{-1, ERROR, 94}, {7, SHIFT, 87}, {8, SHIFT, 88}, {20, SHIFT, 89}, {22, SHIFT, 124}, },
			{{-1, REDUCE, 88}, },
			{{-1, ERROR, 96}, {4, SHIFT, 97}, {5, SHIFT, 98}, {22, SHIFT, 125}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 67}, },
			{{-1, ERROR, 99}, {36, SHIFT, 126}, },
			{{-1, ERROR, 100}, {1, SHIFT, 48}, {2, SHIFT, 49}, {6, SHIFT, 65}, {21, SHIFT, 66}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, ERROR, 101}, {1, SHIFT, 48}, {2, SHIFT, 49}, {6, SHIFT, 65}, {21, SHIFT, 66}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 106}, {1, SHIFT, 48}, {2, SHIFT, 49}, {6, SHIFT, 65}, {21, SHIFT, 66}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 109}, {1, SHIFT, 48}, {2, SHIFT, 49}, {6, SHIFT, 65}, {21, SHIFT, 66}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, ERROR, 110}, {39, SHIFT, 132}, },
			{{-1, ERROR, 111}, {1, SHIFT, 48}, {2, SHIFT, 49}, {6, SHIFT, 65}, {21, SHIFT, 66}, {57, SHIFT, 50}, {59, SHIFT, 26}, },
			{{-1, ERROR, 112}, {41, SHIFT, 134}, },
			{{-1, ERROR, 113}, {37, SHIFT, 136}, {46, SHIFT, 137}, {52, SHIFT, 138}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 70}, {9, SHIFT, 91}, {10, SHIFT, 92}, },
			{{-1, REDUCE, 71}, {9, SHIFT, 91}, {10, SHIFT, 92}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 73}, },
			{{-1, ERROR, 124}, {19, SHIFT, 143}, },
			{{-1, REDUCE, 91}, },
			{{-1, ERROR, 126}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {59, SHIFT, 26}, },
			{{-1, REDUCE, 79}, {3, SHIFT, 101}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 83}, {11, SHIFT, 102}, {12, SHIFT, 103}, {13, SHIFT, 104}, {14, SHIFT, 105}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 132}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {59, SHIFT, 26}, },
			{{-1, ERROR, 133}, {4, SHIFT, 97}, {5, SHIFT, 98}, {22, SHIFT, 146}, },
			{{-1, ERROR, 134}, {2, SHIFT, 147}, },
			{{-1, ERROR, 135}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {59, SHIFT, 26}, },
			{{-1, ERROR, 136}, {30, SHIFT, 149}, },
			{{-1, ERROR, 137}, {1, SHIFT, 48}, {2, SHIFT, 49}, {57, SHIFT, 50}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 139}, {37, SHIFT, 136}, {52, SHIFT, 151}, },
			{{-1, REDUCE, 98}, },
			{{-1, ERROR, 141}, {52, SHIFT, 153}, },
			{{-1, REDUCE, 40}, {46, SHIFT, 137}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 23}, {37, SHIFT, 155}, },
			{{-1, ERROR, 145}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {50, SHIFT, 158}, {59, SHIFT, 26}, },
			{{-1, ERROR, 146}, {19, SHIFT, 159}, },
			{{-1, ERROR, 147}, {41, SHIFT, 160}, {44, SHIFT, 161}, },
			{{-1, ERROR, 148}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {51, SHIFT, 164}, {59, SHIFT, 26}, },
			{{-1, ERROR, 149}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {59, SHIFT, 26}, },
			{{-1, ERROR, 150}, {30, SHIFT, 166}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 152}, {52, SHIFT, 167}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 99}, },
			{{-1, ERROR, 155}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {59, SHIFT, 26}, },
			{{-1, ERROR, 156}, {49, SHIFT, 169}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 26}, },
			{{-1, ERROR, 160}, {2, SHIFT, 170}, },
			{{-1, ERROR, 161}, {2, SHIFT, 171}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 164}, {19, SHIFT, 172}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 166}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {38, SHIFT, 21}, {40, SHIFT, 22}, {42, SHIFT, 23}, {45, SHIFT, 24}, {59, SHIFT, 26}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 169}, {19, SHIFT, 174}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 171}, {41, SHIFT, 160}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 37}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 9}, },
			{{-1, 10}, {13, 35}, },
			{{-1, 11}, },
			{{-1, 12}, },
			{{-1, 27}, {34, 53}, {126, 144}, {149, 165}, {155, 168}, {166, 173}, },
			{{-1, 28}, {32, 47}, {41, 47}, {145, 47}, {148, 47}, },
			{{-1, 29}, },
			{{-1, 156}, },
			{{-1, 157}, },
			{{-1, 30}, },
			{{-1, 54}, {37, 56}, {84, 116}, },
			{{-1, 58}, {64, 93}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, 135}, },
			{{-1, 162}, },
			{{-1, 163}, {171, 175}, },
			{{-1, 139}, },
			{{-1, 140}, {142, 154}, },
			{{-1, 141}, {139, 152}, },
			{{-1, 59}, {33, 51}, {39, 67}, {40, 67}, {66, 67}, {100, 67}, {101, 67}, {106, 67}, {109, 67}, {111, 67}, {137, 150}, },
			{{-1, 31}, {36, 55}, {37, 55}, {38, 60}, {39, 68}, {40, 68}, {43, 60}, {46, 60}, {57, 60}, {64, 60}, {66, 68}, {84, 55}, {87, 60}, {88, 60}, {91, 60}, {92, 60}, {100, 68}, {101, 68}, {106, 68}, {109, 68}, {111, 68}, },
			{{-1, 17}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, 109}, },
			{{-1, 106}, },
			{{-1, -1}, },
			{{-1, 100}, },
			{{-1, -1}, },
			{{-1, 61}, {43, 78}, {46, 80}, {57, 86}, {64, 94}, },
			{{-1, 62}, {87, 119}, {88, 120}, },
			{{-1, 63}, {91, 122}, {92, 123}, },
			{{-1, 69}, {40, 75}, {66, 96}, {111, 133}, },
			{{-1, 70}, {100, 127}, },
			{{-1, 71}, {101, 128}, },
			{{-1, 72}, {109, 130}, },
			{{-1, 73}, {106, 129}, {109, 131}, },
			{{-1, 74}, {65, 95}, },
			{{-1, 13}, },
			{{-1, 32}, {22, 41}, {132, 145}, {135, 148}, },
			{{-1, 64}, },
			{{-1, 142}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: identificador",
			"expecting: EOF",
			"expecting: ';'",
			"expecting: 'var', 'inicio', 'const'",
			"expecting: 'real', 'inteiro', 'caractere'",
			"expecting: 'leia', 'escreva', 'se', 'enquanto', 'repita', 'para', 'avalie', 'fim.', identificador",
			"expecting: 'inicio'",
			"expecting: ':'",
			"expecting: '('",
			"expecting: 'leia', 'escreva', 'se', 'enquanto', 'repita', 'para', 'avalie', identificador",
			"expecting: 'e', 'ou', 'xor', '+', '-', '/', '*', '<', '<=', '>', '>=', '<-', '<>', '=', ';', ',', ')', '['",
			"expecting: 'fim.'",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'enquanto', 'repita', 'ate', 'para', 'avalie', 'caso', 'fim.', fim se, fim enquanto, 'fim para', 'fim avalie', identificador",
			"expecting: '<-'",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'enquanto', 'repita', 'para', 'avalie', 'caso', 'fim.', fim se, 'fim avalie', identificador",
			"expecting: numero real, numero inteiro, string",
			"expecting: numero real, numero inteiro, '(', string, identificador",
			"expecting: numero real, numero inteiro, 'nao', '(', string, identificador",
			"expecting: 'leia', 'escreva', 'se', 'enquanto', 'repita', 'ate', 'para', 'avalie', identificador",
			"expecting: 'de'",
			"expecting: numero inteiro",
			"expecting: 'e', 'ou', 'xor', '+', '-', '/', '*', '<', '<=', '>', '>=', '<>', '=', ';', ',', ')', ':'",
			"expecting: ';', ',', ')'",
			"expecting: ')'",
			"expecting: '+', '-', '/', '*', ';', ',', ')'",
			"expecting: '+', '-', ',', ')'",
			"expecting: 'e', 'ou', 'xor', '<', '<=', '>', '>=', '<>', '=', ')'",
			"expecting: 'ou', 'xor', ')'",
			"expecting: 'e', 'ou', 'xor', ')'",
			"expecting: 'e', 'ou', 'xor', '<', '<=', '>', '>=', ')'",
			"expecting: '+', '-', ')'",
			"expecting: ']'",
			"expecting: '+', '-', ';'",
			"expecting: 'entao'",
			"expecting: 'faca'",
			"expecting: 'ate'",
			"expecting: 'senao', 'caso', 'fim avalie'",
			"expecting: 'e', 'ou', 'xor', '+', '-', '/', '*', '<', '<=', '>', '>=', '<-', '<>', '=', ';', ',', ')'",
			"expecting: ';', ')'",
			"expecting: 'senao', 'fim avalie'",
			"expecting: 'fim avalie'",
			"expecting: 'senao', fim se",
			"expecting: 'leia', 'escreva', 'se', 'enquanto', 'repita', 'para', 'avalie', fim enquanto, identificador",
			"expecting: 'ate', 'passo'",
			"expecting: 'leia', 'escreva', 'se', 'enquanto', 'repita', 'para', 'avalie', 'fim para', identificador",
			"expecting: fim se",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 2, 3, 4, 5, 6, 1, 7, 4, 4, 4, 4, 8, 8, 8, 8, 9, 9, 9, 9, 10, 1, 9, 2, 11, 12, 13, 13, 13, 14, 15, 16, 6, 4, 1, 1, 17, 18, 18, 19, 20, 17, 21, 2, 17, 13, 22, 22, 22, 3, 2, 12, 3, 23, 24, 17, 17, 25, 25, 26, 25, 25, 17, 9, 18, 27, 27, 28, 29, 29, 30, 27, 27, 28, 9, 21, 31, 32, 33, 4, 2, 4, 1, 3, 31, 17, 17, 17, 3, 17, 17, 17, 26, 27, 28, 18, 18, 34, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 35, 18, 36, 37, 38, 13, 39, 13, 25, 25, 25, 13, 25, 25, 3, 27, 10, 29, 29, 30, 30, 30, 10, 28, 21, 10, 8, 16, 13, 40, 37, 41, 37, 13, 42, 43, 3, 44, 45, 10, 8, 13, 41, 13, 37, 10, 46, 46, 13, 13, 21, 21, 10, 10, 3, 41, 10, 13, 46, 3, 10, 36, 13, 37, 13, 10, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
