/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.parser;

import compilador.lexer.*;
import compilador.node.*;
import compilador.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PStart node1 = (PStart) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AStartStart */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AEsqueletoEsqueletoPrograma */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce AAdeclaracaopartedeclaracao1ParteDeclaracao */
            {
                ArrayList<Object> list = new2();
                push(goTo(2), list, false);
            }
            break;
            case 3: /* reduce AAdeclaracaopartedeclaracao2ParteDeclaracao */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list, false);
            }
            break;
            case 4: /* reduce AAtribuicaoParteComandos */
            {
                ArrayList<Object> list = new4();
                push(goTo(3), list, false);
            }
            break;
            case 5: /* reduce ALeiaParteComandos */
            {
                ArrayList<Object> list = new5();
                push(goTo(3), list, false);
            }
            break;
            case 6: /* reduce AEscrevaParteComandos */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list, false);
            }
            break;
            case 7: /* reduce ACondicionalParteComandos */
            {
                ArrayList<Object> list = new7();
                push(goTo(3), list, false);
            }
            break;
            case 8: /* reduce ARepeticaoParteComandos */
            {
                ArrayList<Object> list = new8();
                push(goTo(3), list, false);
            }
            break;
            case 9: /* reduce AIfACondicional */
            {
                ArrayList<Object> list = new9();
                push(goTo(4), list, false);
            }
            break;
            case 10: /* reduce AIfNaCondicional */
            {
                ArrayList<Object> list = new10();
                push(goTo(4), list, false);
            }
            break;
            case 11: /* reduce AIfA1IfAssociado */
            {
                ArrayList<Object> list = new11();
                push(goTo(5), list, false);
            }
            break;
            case 12: /* reduce AIfNa1IfNaoAssociado */
            {
                ArrayList<Object> list = new12();
                push(goTo(6), list, false);
            }
            break;
            case 13: /* reduce AIfNa2IfNaoAssociado */
            {
                ArrayList<Object> list = new13();
                push(goTo(6), list, false);
            }
            break;
            case 14: /* reduce AAenquantorepeticao1Repeticao */
            {
                ArrayList<Object> list = new14();
                push(goTo(7), list, false);
            }
            break;
            case 15: /* reduce AAenquantorepeticao2Repeticao */
            {
                ArrayList<Object> list = new15();
                push(goTo(7), list, false);
            }
            break;
            case 16: /* reduce AArepitarepeticao1Repeticao */
            {
                ArrayList<Object> list = new16();
                push(goTo(7), list, false);
            }
            break;
            case 17: /* reduce AArepitarepeticao2Repeticao */
            {
                ArrayList<Object> list = new17();
                push(goTo(7), list, false);
            }
            break;
            case 18: /* reduce AApararepeticao1Repeticao */
            {
                ArrayList<Object> list = new18();
                push(goTo(7), list, false);
            }
            break;
            case 19: /* reduce AApararepeticao2Repeticao */
            {
                ArrayList<Object> list = new19();
                push(goTo(7), list, false);
            }
            break;
            case 20: /* reduce AIdVirgulaIdVirgula */
            {
                ArrayList<Object> list = new20();
                push(goTo(8), list, false);
            }
            break;
            case 21: /* reduce AExpVirgulaExpVirgula */
            {
                ArrayList<Object> list = new21();
                push(goTo(9), list, false);
            }
            break;
            case 22: /* reduce ACmdPontoVirgulaCmdPontoVirgula */
            {
                ArrayList<Object> list = new22();
                push(goTo(10), list, false);
            }
            break;
            case 23: /* reduce AFpPvFimParaPontoVirgula */
            {
                ArrayList<Object> list = new23();
                push(goTo(11), list, false);
            }
            break;
            case 24: /* reduce AAtribIdAtrib1 */
            {
                ArrayList<Object> list = new24();
                push(goTo(12), list, false);
            }
            break;
            case 25: /* reduce AAtribNumAtrib1 */
            {
                ArrayList<Object> list = new25();
                push(goTo(12), list, false);
            }
            break;
            case 26: /* reduce AAtribStrAtrib1 */
            {
                ArrayList<Object> list = new26();
                push(goTo(12), list, false);
            }
            break;
            case 27: /* reduce APSubAteParaSub */
            {
                ArrayList<Object> list = new27();
                push(goTo(13), list, false);
            }
            break;
            case 28: /* reduce APSubPasso1ParaSubPasso */
            {
                ArrayList<Object> list = new28();
                push(goTo(14), list, false);
            }
            break;
            case 29: /* reduce APSubPasso2ParaSubPasso */
            {
                ArrayList<Object> list = new29();
                push(goTo(14), list, false);
            }
            break;
            case 30: /* reduce APSubAteParaSubAte */
            {
                ArrayList<Object> list = new30();
                push(goTo(15), list, false);
            }
            break;
            case 31: /* reduce AValorExpressao */
            {
                ArrayList<Object> list = new31();
                push(goTo(16), list, false);
            }
            break;
            case 32: /* reduce AExpIdExpressao */
            {
                ArrayList<Object> list = new32();
                push(goTo(16), list, false);
            }
            break;
            case 33: /* reduce AIgualdadeExpressaoLogica */
            {
                ArrayList<Object> list = new33();
                push(goTo(17), list, false);
            }
            break;
            case 34: /* reduce ATerminal$ParteDeclaracao */
            {
                ArrayList<Object> list = new34();
                push(goTo(18), list, true);
            }
            break;
            case 35: /* reduce ANonTerminal$ParteDeclaracao */
            {
                ArrayList<Object> list = new35();
                push(goTo(18), list, true);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AStartStart */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStart pstartNode1;
        {
            // Block
        PEsqueletoPrograma pesqueletoprogramaNode2;
        pesqueletoprogramaNode2 = (PEsqueletoPrograma)nodeArrayList1.get(0);

        pstartNode1 = new AStartStart(pesqueletoprogramaNode2);
        }
	nodeList.add(pstartNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AEsqueletoEsqueletoPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEsqueletoPrograma pesqueletoprogramaNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        TPontoEVirgula tpontoevirgulaNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TInicio tinicioNode7;
        TFimPonto tfimpontoNode8;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tpontoevirgulaNode4 = (TPontoEVirgula)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tinicioNode7 = (TInicio)nodeArrayList5.get(0);
        tfimpontoNode8 = (TFimPonto)nodeArrayList6.get(0);

        pesqueletoprogramaNode1 = new AEsqueletoEsqueletoPrograma(tprogramaNode2, tidentificadorNode3, tpontoevirgulaNode4, listNode6, tinicioNode7, tfimpontoNode8);
        }
	nodeList.add(pesqueletoprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAdeclaracaopartedeclaracao1ParteDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteDeclaracao ppartedeclaracaoNode1;
        {
            // Block
        TVar tvarNode2;
        TTipo ttipoNode3;
        TDoisPontos tdoispontosNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        TIdentificador tidentificadorNode6;
        TPontoEVirgula tpontoevirgulaNode7;
        tvarNode2 = (TVar)nodeArrayList1.get(0);
        ttipoNode3 = (TTipo)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        tidentificadorNode6 = (TIdentificador)nodeArrayList4.get(0);
        tpontoevirgulaNode7 = (TPontoEVirgula)nodeArrayList5.get(0);

        ppartedeclaracaoNode1 = new ADeclaracaoParteDeclaracao(tvarNode2, ttipoNode3, tdoispontosNode4, null, tidentificadorNode6, tpontoevirgulaNode7);
        }
	nodeList.add(ppartedeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAdeclaracaopartedeclaracao2ParteDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteDeclaracao ppartedeclaracaoNode1;
        {
            // Block
        TVar tvarNode2;
        TTipo ttipoNode3;
        TDoisPontos tdoispontosNode4;
        PIdVirgula pidvirgulaNode5;
        TIdentificador tidentificadorNode6;
        TPontoEVirgula tpontoevirgulaNode7;
        tvarNode2 = (TVar)nodeArrayList1.get(0);
        ttipoNode3 = (TTipo)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        pidvirgulaNode5 = (PIdVirgula)nodeArrayList4.get(0);
        tidentificadorNode6 = (TIdentificador)nodeArrayList5.get(0);
        tpontoevirgulaNode7 = (TPontoEVirgula)nodeArrayList6.get(0);

        ppartedeclaracaoNode1 = new ADeclaracaoParteDeclaracao(tvarNode2, ttipoNode3, tdoispontosNode4, pidvirgulaNode5, tidentificadorNode6, tpontoevirgulaNode7);
        }
	nodeList.add(ppartedeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AAtribuicaoParteComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteComandos ppartecomandosNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TSeta tsetaNode3;
        PAtrib1 patrib1Node4;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tsetaNode3 = (TSeta)nodeArrayList2.get(0);
        patrib1Node4 = (PAtrib1)nodeArrayList3.get(0);

        ppartecomandosNode1 = new AAtribuicaoParteComandos(tidentificadorNode2, tsetaNode3, patrib1Node4);
        }
	nodeList.add(ppartecomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ALeiaParteComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteComandos ppartecomandosNode1;
        {
            // Block
        TLeia tleiaNode2;
        TAbreParen tabreparenNode3;
        PIdVirgula pidvirgulaNode4;
        TIdentificador tidentificadorNode5;
        TFechaParen tfechaparenNode6;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tabreparenNode3 = (TAbreParen)nodeArrayList2.get(0);
        pidvirgulaNode4 = (PIdVirgula)nodeArrayList3.get(0);
        tidentificadorNode5 = (TIdentificador)nodeArrayList4.get(0);
        tfechaparenNode6 = (TFechaParen)nodeArrayList5.get(0);

        ppartecomandosNode1 = new ALeiaParteComandos(tleiaNode2, tabreparenNode3, pidvirgulaNode4, tidentificadorNode5, tfechaparenNode6);
        }
	nodeList.add(ppartecomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AEscrevaParteComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteComandos ppartecomandosNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TAbreParen tabreparenNode3;
        PExpVirgula pexpvirgulaNode4;
        PExpressao pexpressaoNode5;
        TFechaParen tfechaparenNode6;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tabreparenNode3 = (TAbreParen)nodeArrayList2.get(0);
        pexpvirgulaNode4 = (PExpVirgula)nodeArrayList3.get(0);
        pexpressaoNode5 = (PExpressao)nodeArrayList4.get(0);
        tfechaparenNode6 = (TFechaParen)nodeArrayList5.get(0);

        ppartecomandosNode1 = new AEscrevaParteComandos(tescrevaNode2, tabreparenNode3, pexpvirgulaNode4, pexpressaoNode5, tfechaparenNode6);
        }
	nodeList.add(ppartecomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ACondicionalParteComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteComandos ppartecomandosNode1;
        {
            // Block
        PCondicional pcondicionalNode2;
        pcondicionalNode2 = (PCondicional)nodeArrayList1.get(0);

        ppartecomandosNode1 = new ACondicionalParteComandos(pcondicionalNode2);
        }
	nodeList.add(ppartecomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ARepeticaoParteComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParteComandos ppartecomandosNode1;
        {
            // Block
        PRepeticao prepeticaoNode2;
        prepeticaoNode2 = (PRepeticao)nodeArrayList1.get(0);

        ppartecomandosNode1 = new ARepeticaoParteComandos(prepeticaoNode2);
        }
	nodeList.add(ppartecomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AIfACondicional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCondicional pcondicionalNode1;
        {
            // Block
        PIfAssociado pifassociadoNode2;
        pifassociadoNode2 = (PIfAssociado)nodeArrayList1.get(0);

        pcondicionalNode1 = new AIfACondicional(pifassociadoNode2);
        }
	nodeList.add(pcondicionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AIfNaCondicional */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCondicional pcondicionalNode1;
        {
            // Block
        PIfNaoAssociado pifnaoassociadoNode2;
        pifnaoassociadoNode2 = (PIfNaoAssociado)nodeArrayList1.get(0);

        pcondicionalNode1 = new AIfNaCondicional(pifnaoassociadoNode2);
        }
	nodeList.add(pcondicionalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AIfA1IfAssociado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIfAssociado pifassociadoNode1;
        {
            // Block
        TSe tseNode2;
        PExpressaoLogica pexpressaologicaNode3;
        TEntao tentaoNode4;
        PIfAssociado pifassociadoNode5;
        TSenao tsenaoNode6;
        PIfNaoAssociado pifnaoassociadoNode7;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList2.get(0);
        tentaoNode4 = (TEntao)nodeArrayList3.get(0);
        pifassociadoNode5 = (PIfAssociado)nodeArrayList4.get(0);
        tsenaoNode6 = (TSenao)nodeArrayList5.get(0);
        pifnaoassociadoNode7 = (PIfNaoAssociado)nodeArrayList6.get(0);

        pifassociadoNode1 = new AIfA1IfAssociado(tseNode2, pexpressaologicaNode3, tentaoNode4, pifassociadoNode5, tsenaoNode6, pifnaoassociadoNode7);
        }
	nodeList.add(pifassociadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AIfNa1IfNaoAssociado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIfNaoAssociado pifnaoassociadoNode1;
        {
            // Block
        TSe tseNode2;
        PExpressaoLogica pexpressaologicaNode3;
        TSenao tsenaoNode4;
        PCondicional pcondicionalNode5;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList2.get(0);
        tsenaoNode4 = (TSenao)nodeArrayList3.get(0);
        pcondicionalNode5 = (PCondicional)nodeArrayList4.get(0);

        pifnaoassociadoNode1 = new AIfNa1IfNaoAssociado(tseNode2, pexpressaologicaNode3, tsenaoNode4, pcondicionalNode5);
        }
	nodeList.add(pifnaoassociadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AIfNa2IfNaoAssociado */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIfNaoAssociado pifnaoassociadoNode1;
        {
            // Block
        TSe tseNode2;
        PExpressaoLogica pexpressaologicaNode3;
        TEntao tentaoNode4;
        PIfAssociado pifassociadoNode5;
        TSenao tsenaoNode6;
        PIfNaoAssociado pifnaoassociadoNode7;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        pexpressaologicaNode3 = (PExpressaoLogica)nodeArrayList2.get(0);
        tentaoNode4 = (TEntao)nodeArrayList3.get(0);
        pifassociadoNode5 = (PIfAssociado)nodeArrayList4.get(0);
        tsenaoNode6 = (TSenao)nodeArrayList5.get(0);
        pifnaoassociadoNode7 = (PIfNaoAssociado)nodeArrayList6.get(0);

        pifnaoassociadoNode1 = new AIfNa2IfNaoAssociado(tseNode2, pexpressaologicaNode3, tentaoNode4, pifassociadoNode5, tsenaoNode6, pifnaoassociadoNode7);
        }
	nodeList.add(pifnaoassociadoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AAenquantorepeticao1Repeticao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeticao prepeticaoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAbreParen tabreparenNode3;
        PExpressaoLogica pexpressaologicaNode4;
        TFechaParen tfechaparenNode5;
        TFaca tfacaNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        PParteComandos ppartecomandosNode8;
        TPontoEVirgula tpontoevirgulaNode9;
        TFimEnquanto tfimenquantoNode10;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tabreparenNode3 = (TAbreParen)nodeArrayList2.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList3.get(0);
        tfechaparenNode5 = (TFechaParen)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        ppartecomandosNode8 = (PParteComandos)nodeArrayList6.get(0);
        tpontoevirgulaNode9 = (TPontoEVirgula)nodeArrayList7.get(0);
        tfimenquantoNode10 = (TFimEnquanto)nodeArrayList8.get(0);

        prepeticaoNode1 = new AEnquantoRepeticao(tenquantoNode2, tabreparenNode3, pexpressaologicaNode4, tfechaparenNode5, tfacaNode6, null, ppartecomandosNode8, tpontoevirgulaNode9, tfimenquantoNode10);
        }
	nodeList.add(prepeticaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AAenquantorepeticao2Repeticao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeticao prepeticaoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAbreParen tabreparenNode3;
        PExpressaoLogica pexpressaologicaNode4;
        TFechaParen tfechaparenNode5;
        TFaca tfacaNode6;
        PCmdPontoVirgula pcmdpontovirgulaNode7;
        PParteComandos ppartecomandosNode8;
        TPontoEVirgula tpontoevirgulaNode9;
        TFimEnquanto tfimenquantoNode10;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tabreparenNode3 = (TAbreParen)nodeArrayList2.get(0);
        pexpressaologicaNode4 = (PExpressaoLogica)nodeArrayList3.get(0);
        tfechaparenNode5 = (TFechaParen)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        pcmdpontovirgulaNode7 = (PCmdPontoVirgula)nodeArrayList6.get(0);
        ppartecomandosNode8 = (PParteComandos)nodeArrayList7.get(0);
        tpontoevirgulaNode9 = (TPontoEVirgula)nodeArrayList8.get(0);
        tfimenquantoNode10 = (TFimEnquanto)nodeArrayList9.get(0);

        prepeticaoNode1 = new AEnquantoRepeticao(tenquantoNode2, tabreparenNode3, pexpressaologicaNode4, tfechaparenNode5, tfacaNode6, pcmdpontovirgulaNode7, ppartecomandosNode8, tpontoevirgulaNode9, tfimenquantoNode10);
        }
	nodeList.add(prepeticaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AArepitarepeticao1Repeticao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeticao prepeticaoNode1;
        {
            // Block
        TRepita trepitaNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PParteComandos ppartecomandosNode4;
        TPontoEVirgula tpontoevirgulaNode5;
        TAte tateNode6;
        TAbreParen tabreparenNode7;
        PExpressaoLogica pexpressaologicaNode8;
        TFechaParen tfechaparenNode9;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        ppartecomandosNode4 = (PParteComandos)nodeArrayList2.get(0);
        tpontoevirgulaNode5 = (TPontoEVirgula)nodeArrayList3.get(0);
        tateNode6 = (TAte)nodeArrayList4.get(0);
        tabreparenNode7 = (TAbreParen)nodeArrayList5.get(0);
        pexpressaologicaNode8 = (PExpressaoLogica)nodeArrayList6.get(0);
        tfechaparenNode9 = (TFechaParen)nodeArrayList7.get(0);

        prepeticaoNode1 = new ARepitaRepeticao(trepitaNode2, null, ppartecomandosNode4, tpontoevirgulaNode5, tateNode6, tabreparenNode7, pexpressaologicaNode8, tfechaparenNode9);
        }
	nodeList.add(prepeticaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AArepitarepeticao2Repeticao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeticao prepeticaoNode1;
        {
            // Block
        TRepita trepitaNode2;
        PCmdPontoVirgula pcmdpontovirgulaNode3;
        PParteComandos ppartecomandosNode4;
        TPontoEVirgula tpontoevirgulaNode5;
        TAte tateNode6;
        TAbreParen tabreparenNode7;
        PExpressaoLogica pexpressaologicaNode8;
        TFechaParen tfechaparenNode9;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        pcmdpontovirgulaNode3 = (PCmdPontoVirgula)nodeArrayList2.get(0);
        ppartecomandosNode4 = (PParteComandos)nodeArrayList3.get(0);
        tpontoevirgulaNode5 = (TPontoEVirgula)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        tabreparenNode7 = (TAbreParen)nodeArrayList6.get(0);
        pexpressaologicaNode8 = (PExpressaoLogica)nodeArrayList7.get(0);
        tfechaparenNode9 = (TFechaParen)nodeArrayList8.get(0);

        prepeticaoNode1 = new ARepitaRepeticao(trepitaNode2, pcmdpontovirgulaNode3, ppartecomandosNode4, tpontoevirgulaNode5, tateNode6, tabreparenNode7, pexpressaologicaNode8, tfechaparenNode9);
        }
	nodeList.add(prepeticaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AApararepeticao1Repeticao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeticao prepeticaoNode1;
        {
            // Block
        TPara tparaNode2;
        TIdentificador tidentificadorNode3;
        TDe tdeNode4;
        TNumeroInteiro tnumerointeiroNode5;
        PParaSub pparasubNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        PParteComandos ppartecomandosNode8;
        TPontoEVirgula tpontoevirgulaNode9;
        PFimParaPontoVirgula pfimparapontovirgulaNode10;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointeiroNode5 = (TNumeroInteiro)nodeArrayList4.get(0);
        pparasubNode6 = (PParaSub)nodeArrayList5.get(0);
        ppartecomandosNode8 = (PParteComandos)nodeArrayList6.get(0);
        tpontoevirgulaNode9 = (TPontoEVirgula)nodeArrayList7.get(0);
        pfimparapontovirgulaNode10 = (PFimParaPontoVirgula)nodeArrayList8.get(0);

        prepeticaoNode1 = new AParaRepeticao(tparaNode2, tidentificadorNode3, tdeNode4, tnumerointeiroNode5, pparasubNode6, null, ppartecomandosNode8, tpontoevirgulaNode9, pfimparapontovirgulaNode10);
        }
	nodeList.add(prepeticaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AApararepeticao2Repeticao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeticao prepeticaoNode1;
        {
            // Block
        TPara tparaNode2;
        TIdentificador tidentificadorNode3;
        TDe tdeNode4;
        TNumeroInteiro tnumerointeiroNode5;
        PParaSub pparasubNode6;
        PCmdPontoVirgula pcmdpontovirgulaNode7;
        PParteComandos ppartecomandosNode8;
        TPontoEVirgula tpontoevirgulaNode9;
        PFimParaPontoVirgula pfimparapontovirgulaNode10;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointeiroNode5 = (TNumeroInteiro)nodeArrayList4.get(0);
        pparasubNode6 = (PParaSub)nodeArrayList5.get(0);
        pcmdpontovirgulaNode7 = (PCmdPontoVirgula)nodeArrayList6.get(0);
        ppartecomandosNode8 = (PParteComandos)nodeArrayList7.get(0);
        tpontoevirgulaNode9 = (TPontoEVirgula)nodeArrayList8.get(0);
        pfimparapontovirgulaNode10 = (PFimParaPontoVirgula)nodeArrayList9.get(0);

        prepeticaoNode1 = new AParaRepeticao(tparaNode2, tidentificadorNode3, tdeNode4, tnumerointeiroNode5, pparasubNode6, pcmdpontovirgulaNode7, ppartecomandosNode8, tpontoevirgulaNode9, pfimparapontovirgulaNode10);
        }
	nodeList.add(prepeticaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AIdVirgulaIdVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdVirgula pidvirgulaNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TVirgula tvirgulaNode3;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pidvirgulaNode1 = new AIdVirgulaIdVirgula(tidentificadorNode2, tvirgulaNode3);
        }
	nodeList.add(pidvirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AExpVirgulaExpVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVirgula pexpvirgulaNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TVirgula tvirgulaNode3;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pexpvirgulaNode1 = new AExpVirgulaExpVirgula(pexpressaoNode2, tvirgulaNode3);
        }
	nodeList.add(pexpvirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce ACmdPontoVirgulaCmdPontoVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCmdPontoVirgula pcmdpontovirgulaNode1;
        {
            // Block
        PParteComandos ppartecomandosNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        ppartecomandosNode2 = (PParteComandos)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);

        pcmdpontovirgulaNode1 = new ACmdPontoVirgulaCmdPontoVirgula(ppartecomandosNode2, tpontoevirgulaNode3);
        }
	nodeList.add(pcmdpontovirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AFpPvFimParaPontoVirgula */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFimParaPontoVirgula pfimparapontovirgulaNode1;
        {
            // Block
        TFimPara tfimparaNode2;
        TPontoEVirgula tpontoevirgulaNode3;
        tfimparaNode2 = (TFimPara)nodeArrayList1.get(0);
        tpontoevirgulaNode3 = (TPontoEVirgula)nodeArrayList2.get(0);

        pfimparapontovirgulaNode1 = new AFpPvFimParaPontoVirgula(tfimparaNode2, tpontoevirgulaNode3);
        }
	nodeList.add(pfimparapontovirgulaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AAtribIdAtrib1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib1 patrib1Node1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        patrib1Node1 = new AAtribIdAtrib1(tidentificadorNode2);
        }
	nodeList.add(patrib1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AAtribNumAtrib1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib1 patrib1Node1;
        {
            // Block
        TNumero tnumeroNode2;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);

        patrib1Node1 = new AAtribNumAtrib1(tnumeroNode2);
        }
	nodeList.add(patrib1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAtribStrAtrib1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtrib1 patrib1Node1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        patrib1Node1 = new AAtribStrAtrib1(tstringNode2);
        }
	nodeList.add(patrib1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce APSubAteParaSub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaSub pparasubNode1;
        {
            // Block
        TAte tateNode2;
        TNumeroInteiro tnumerointeiroNode3;
        PParaSubPasso pparasubpassoNode4;
        tateNode2 = (TAte)nodeArrayList1.get(0);
        tnumerointeiroNode3 = (TNumeroInteiro)nodeArrayList2.get(0);
        pparasubpassoNode4 = (PParaSubPasso)nodeArrayList3.get(0);

        pparasubNode1 = new APSubAteParaSub(tateNode2, tnumerointeiroNode3, pparasubpassoNode4);
        }
	nodeList.add(pparasubNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce APSubPasso1ParaSubPasso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaSubPasso pparasubpassoNode1;
        {
            // Block
        TPasso tpassoNode2;
        TNumeroInteiro tnumerointeiroNode3;
        PParaSubAte pparasubateNode4;
        tpassoNode2 = (TPasso)nodeArrayList1.get(0);
        tnumerointeiroNode3 = (TNumeroInteiro)nodeArrayList2.get(0);
        pparasubateNode4 = (PParaSubAte)nodeArrayList3.get(0);

        pparasubpassoNode1 = new APSubPasso1ParaSubPasso(tpassoNode2, tnumerointeiroNode3, pparasubateNode4);
        }
	nodeList.add(pparasubpassoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce APSubPasso2ParaSubPasso */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaSubPasso pparasubpassoNode1;
        {
            // Block
        PParaSubAte pparasubateNode2;
        pparasubateNode2 = (PParaSubAte)nodeArrayList1.get(0);

        pparasubpassoNode1 = new APSubPasso2ParaSubPasso(pparasubateNode2);
        }
	nodeList.add(pparasubpassoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce APSubAteParaSubAte */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParaSubAte pparasubateNode1;
        {
            // Block
        TAte tateNode2;
        TNumeroInteiro tnumerointeiroNode3;
        tateNode2 = (TAte)nodeArrayList1.get(0);
        tnumerointeiroNode3 = (TNumeroInteiro)nodeArrayList2.get(0);

        pparasubateNode1 = new APSubAteParaSubAte(tateNode2, tnumerointeiroNode3);
        }
	nodeList.add(pparasubateNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AValorExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        TValor tvalorNode2;
        tvalorNode2 = (TValor)nodeArrayList1.get(0);

        pexpressaoNode1 = new AValorExpressao(tvalorNode2);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AExpIdExpressao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pexpressaoNode1 = new AExpIdExpressao(tidentificadorNode2);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AIgualdadeExpressaoLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpressaoLogica pexpressaologicaNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);

        pexpressaologicaNode1 = new AIgualdadeExpressaoLogica(pexpressaoNode2);
        }
	nodeList.add(pexpressaologicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ATerminal$ParteDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PParteDeclaracao ppartedeclaracaoNode1;
        ppartedeclaracaoNode1 = (PParteDeclaracao)nodeArrayList1.get(0);
	if(ppartedeclaracaoNode1 != null)
	{
	  listNode2.add(ppartedeclaracaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ANonTerminal$ParteDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PParteDeclaracao ppartedeclaracaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ppartedeclaracaoNode2 = (PParteDeclaracao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ppartedeclaracaoNode2 != null)
	{
	  listNode3.add(ppartedeclaracaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {31, SHIFT, 1}, },
			{{-1, ERROR, 1}, {56, SHIFT, 4}, },
			{{-1, ERROR, 2}, {57, ACCEPT, -1}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 4}, {17, SHIFT, 5}, },
			{{-1, ERROR, 5}, {32, SHIFT, 6}, },
			{{-1, ERROR, 6}, {49, SHIFT, 9}, },
			{{-1, REDUCE, 34}, },
			{{-1, ERROR, 8}, {32, SHIFT, 6}, {43, SHIFT, 10}, },
			{{-1, ERROR, 9}, {28, SHIFT, 12}, },
			{{-1, ERROR, 10}, {44, SHIFT, 13}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 12}, {56, SHIFT, 14}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 14}, {17, SHIFT, 16}, {18, SHIFT, 17}, },
			{{-1, ERROR, 15}, {56, SHIFT, 18}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 18}, {17, SHIFT, 19}, },
			{{-1, REDUCE, 3}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 7}, {8, 11}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, 15}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, 8}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: identificador",
			"expecting: EOF",
			"expecting: ';'",
			"expecting: 'var'",
			"expecting: tipo",
			"expecting: 'var', 'inicio'",
			"expecting: ':'",
			"expecting: 'fim.'",
			"expecting: ';', ','",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 2, 3, 4, 5, 6, 6, 7, 8, 6, 1, 2, 9, 1, 6, 1, 3, 6, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
