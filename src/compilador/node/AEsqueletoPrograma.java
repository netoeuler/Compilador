/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import java.util.*;
import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AEsqueletoPrograma extends PEsqueletoPrograma
{
    private TIdentificador _identificador_;
    private final LinkedList<PParteDeclaracao> _parteDeclaracao_ = new LinkedList<PParteDeclaracao>();
    private PParteComandos _parteComandos_;

    public AEsqueletoPrograma()
    {
        // Constructor
    }

    public AEsqueletoPrograma(
        @SuppressWarnings("hiding") TIdentificador _identificador_,
        @SuppressWarnings("hiding") List<?> _parteDeclaracao_,
        @SuppressWarnings("hiding") PParteComandos _parteComandos_)
    {
        // Constructor
        setIdentificador(_identificador_);

        setParteDeclaracao(_parteDeclaracao_);

        setParteComandos(_parteComandos_);

    }

    @Override
    public Object clone()
    {
        return new AEsqueletoPrograma(
            cloneNode(this._identificador_),
            cloneList(this._parteDeclaracao_),
            cloneNode(this._parteComandos_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEsqueletoPrograma(this);
    }

    public TIdentificador getIdentificador()
    {
        return this._identificador_;
    }

    public void setIdentificador(TIdentificador node)
    {
        if(this._identificador_ != null)
        {
            this._identificador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identificador_ = node;
    }

    public LinkedList<PParteDeclaracao> getParteDeclaracao()
    {
        return this._parteDeclaracao_;
    }

    public void setParteDeclaracao(List<?> list)
    {
        for(PParteDeclaracao e : this._parteDeclaracao_)
        {
            e.parent(null);
        }
        this._parteDeclaracao_.clear();

        for(Object obj_e : list)
        {
            PParteDeclaracao e = (PParteDeclaracao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._parteDeclaracao_.add(e);
        }
    }

    public PParteComandos getParteComandos()
    {
        return this._parteComandos_;
    }

    public void setParteComandos(PParteComandos node)
    {
        if(this._parteComandos_ != null)
        {
            this._parteComandos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parteComandos_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identificador_)
            + toString(this._parteDeclaracao_)
            + toString(this._parteComandos_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identificador_ == child)
        {
            this._identificador_ = null;
            return;
        }

        if(this._parteDeclaracao_.remove(child))
        {
            return;
        }

        if(this._parteComandos_ == child)
        {
            this._parteComandos_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identificador_ == oldChild)
        {
            setIdentificador((TIdentificador) newChild);
            return;
        }

        for(ListIterator<PParteDeclaracao> i = this._parteDeclaracao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PParteDeclaracao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._parteComandos_ == oldChild)
        {
            setParteComandos((PParteComandos) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
