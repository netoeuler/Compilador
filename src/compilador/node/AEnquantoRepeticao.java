/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import java.util.*;
import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AEnquantoRepeticao extends PRepeticao
{
    private TEnquanto _enquanto_;
    private TAbreParen _abreParen_;
    private PExpressaoLogica _expressaoLogica_;
    private TFechaParen _fechaParen_;
    private TFaca _faca_;
    private final LinkedList<PParteComandos> _parteComandos_ = new LinkedList<PParteComandos>();
    private TFimEnquanto _fimEnquanto_;

    public AEnquantoRepeticao()
    {
        // Constructor
    }

    public AEnquantoRepeticao(
        @SuppressWarnings("hiding") TEnquanto _enquanto_,
        @SuppressWarnings("hiding") TAbreParen _abreParen_,
        @SuppressWarnings("hiding") PExpressaoLogica _expressaoLogica_,
        @SuppressWarnings("hiding") TFechaParen _fechaParen_,
        @SuppressWarnings("hiding") TFaca _faca_,
        @SuppressWarnings("hiding") List<?> _parteComandos_,
        @SuppressWarnings("hiding") TFimEnquanto _fimEnquanto_)
    {
        // Constructor
        setEnquanto(_enquanto_);

        setAbreParen(_abreParen_);

        setExpressaoLogica(_expressaoLogica_);

        setFechaParen(_fechaParen_);

        setFaca(_faca_);

        setParteComandos(_parteComandos_);

        setFimEnquanto(_fimEnquanto_);

    }

    @Override
    public Object clone()
    {
        return new AEnquantoRepeticao(
            cloneNode(this._enquanto_),
            cloneNode(this._abreParen_),
            cloneNode(this._expressaoLogica_),
            cloneNode(this._fechaParen_),
            cloneNode(this._faca_),
            cloneList(this._parteComandos_),
            cloneNode(this._fimEnquanto_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEnquantoRepeticao(this);
    }

    public TEnquanto getEnquanto()
    {
        return this._enquanto_;
    }

    public void setEnquanto(TEnquanto node)
    {
        if(this._enquanto_ != null)
        {
            this._enquanto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._enquanto_ = node;
    }

    public TAbreParen getAbreParen()
    {
        return this._abreParen_;
    }

    public void setAbreParen(TAbreParen node)
    {
        if(this._abreParen_ != null)
        {
            this._abreParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreParen_ = node;
    }

    public PExpressaoLogica getExpressaoLogica()
    {
        return this._expressaoLogica_;
    }

    public void setExpressaoLogica(PExpressaoLogica node)
    {
        if(this._expressaoLogica_ != null)
        {
            this._expressaoLogica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressaoLogica_ = node;
    }

    public TFechaParen getFechaParen()
    {
        return this._fechaParen_;
    }

    public void setFechaParen(TFechaParen node)
    {
        if(this._fechaParen_ != null)
        {
            this._fechaParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParen_ = node;
    }

    public TFaca getFaca()
    {
        return this._faca_;
    }

    public void setFaca(TFaca node)
    {
        if(this._faca_ != null)
        {
            this._faca_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._faca_ = node;
    }

    public LinkedList<PParteComandos> getParteComandos()
    {
        return this._parteComandos_;
    }

    public void setParteComandos(List<?> list)
    {
        for(PParteComandos e : this._parteComandos_)
        {
            e.parent(null);
        }
        this._parteComandos_.clear();

        for(Object obj_e : list)
        {
            PParteComandos e = (PParteComandos) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._parteComandos_.add(e);
        }
    }

    public TFimEnquanto getFimEnquanto()
    {
        return this._fimEnquanto_;
    }

    public void setFimEnquanto(TFimEnquanto node)
    {
        if(this._fimEnquanto_ != null)
        {
            this._fimEnquanto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fimEnquanto_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._enquanto_)
            + toString(this._abreParen_)
            + toString(this._expressaoLogica_)
            + toString(this._fechaParen_)
            + toString(this._faca_)
            + toString(this._parteComandos_)
            + toString(this._fimEnquanto_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._enquanto_ == child)
        {
            this._enquanto_ = null;
            return;
        }

        if(this._abreParen_ == child)
        {
            this._abreParen_ = null;
            return;
        }

        if(this._expressaoLogica_ == child)
        {
            this._expressaoLogica_ = null;
            return;
        }

        if(this._fechaParen_ == child)
        {
            this._fechaParen_ = null;
            return;
        }

        if(this._faca_ == child)
        {
            this._faca_ = null;
            return;
        }

        if(this._parteComandos_.remove(child))
        {
            return;
        }

        if(this._fimEnquanto_ == child)
        {
            this._fimEnquanto_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._enquanto_ == oldChild)
        {
            setEnquanto((TEnquanto) newChild);
            return;
        }

        if(this._abreParen_ == oldChild)
        {
            setAbreParen((TAbreParen) newChild);
            return;
        }

        if(this._expressaoLogica_ == oldChild)
        {
            setExpressaoLogica((PExpressaoLogica) newChild);
            return;
        }

        if(this._fechaParen_ == oldChild)
        {
            setFechaParen((TFechaParen) newChild);
            return;
        }

        if(this._faca_ == oldChild)
        {
            setFaca((TFaca) newChild);
            return;
        }

        for(ListIterator<PParteComandos> i = this._parteComandos_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PParteComandos) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._fimEnquanto_ == oldChild)
        {
            setFimEnquanto((TFimEnquanto) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
