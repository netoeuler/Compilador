/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import java.util.*;
import compilador.analysis.*;

@SuppressWarnings("nls")
public final class ACondSenao extends PCondSenao
{
    private TSenao _senao_;
    private final LinkedList<PParteComandos> _parteComandos_ = new LinkedList<PParteComandos>();

    public ACondSenao()
    {
        // Constructor
    }

    public ACondSenao(
        @SuppressWarnings("hiding") TSenao _senao_,
        @SuppressWarnings("hiding") List<?> _parteComandos_)
    {
        // Constructor
        setSenao(_senao_);

        setParteComandos(_parteComandos_);

    }

    @Override
    public Object clone()
    {
        return new ACondSenao(
            cloneNode(this._senao_),
            cloneList(this._parteComandos_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACondSenao(this);
    }

    public TSenao getSenao()
    {
        return this._senao_;
    }

    public void setSenao(TSenao node)
    {
        if(this._senao_ != null)
        {
            this._senao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._senao_ = node;
    }

    public LinkedList<PParteComandos> getParteComandos()
    {
        return this._parteComandos_;
    }

    public void setParteComandos(List<?> list)
    {
        for(PParteComandos e : this._parteComandos_)
        {
            e.parent(null);
        }
        this._parteComandos_.clear();

        for(Object obj_e : list)
        {
            PParteComandos e = (PParteComandos) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._parteComandos_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._senao_)
            + toString(this._parteComandos_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._senao_ == child)
        {
            this._senao_ = null;
            return;
        }

        if(this._parteComandos_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._senao_ == oldChild)
        {
            setSenao((TSenao) newChild);
            return;
        }

        for(ListIterator<PParteComandos> i = this._parteComandos_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PParteComandos) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
