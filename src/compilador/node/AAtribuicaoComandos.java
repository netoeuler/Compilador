/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AAtribuicaoComandos extends PComandos
{
    private TIdentificador _identificador_;
    private TSeta _seta_;
    private PAtrib1 _atrib1_;
    private TPontoEVirgula _pontoEVirgula_;

    public AAtribuicaoComandos()
    {
        // Constructor
    }

    public AAtribuicaoComandos(
        @SuppressWarnings("hiding") TIdentificador _identificador_,
        @SuppressWarnings("hiding") TSeta _seta_,
        @SuppressWarnings("hiding") PAtrib1 _atrib1_,
        @SuppressWarnings("hiding") TPontoEVirgula _pontoEVirgula_)
    {
        // Constructor
        setIdentificador(_identificador_);

        setSeta(_seta_);

        setAtrib1(_atrib1_);

        setPontoEVirgula(_pontoEVirgula_);

    }

    @Override
    public Object clone()
    {
        return new AAtribuicaoComandos(
            cloneNode(this._identificador_),
            cloneNode(this._seta_),
            cloneNode(this._atrib1_),
            cloneNode(this._pontoEVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAtribuicaoComandos(this);
    }

    public TIdentificador getIdentificador()
    {
        return this._identificador_;
    }

    public void setIdentificador(TIdentificador node)
    {
        if(this._identificador_ != null)
        {
            this._identificador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identificador_ = node;
    }

    public TSeta getSeta()
    {
        return this._seta_;
    }

    public void setSeta(TSeta node)
    {
        if(this._seta_ != null)
        {
            this._seta_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._seta_ = node;
    }

    public PAtrib1 getAtrib1()
    {
        return this._atrib1_;
    }

    public void setAtrib1(PAtrib1 node)
    {
        if(this._atrib1_ != null)
        {
            this._atrib1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._atrib1_ = node;
    }

    public TPontoEVirgula getPontoEVirgula()
    {
        return this._pontoEVirgula_;
    }

    public void setPontoEVirgula(TPontoEVirgula node)
    {
        if(this._pontoEVirgula_ != null)
        {
            this._pontoEVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoEVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identificador_)
            + toString(this._seta_)
            + toString(this._atrib1_)
            + toString(this._pontoEVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identificador_ == child)
        {
            this._identificador_ = null;
            return;
        }

        if(this._seta_ == child)
        {
            this._seta_ = null;
            return;
        }

        if(this._atrib1_ == child)
        {
            this._atrib1_ = null;
            return;
        }

        if(this._pontoEVirgula_ == child)
        {
            this._pontoEVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identificador_ == oldChild)
        {
            setIdentificador((TIdentificador) newChild);
            return;
        }

        if(this._seta_ == oldChild)
        {
            setSeta((TSeta) newChild);
            return;
        }

        if(this._atrib1_ == oldChild)
        {
            setAtrib1((PAtrib1) newChild);
            return;
        }

        if(this._pontoEVirgula_ == oldChild)
        {
            setPontoEVirgula((TPontoEVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
