/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import compilador.analysis.*;

@SuppressWarnings("nls")
public final class APSubAteParaSub extends PParaSub
{
    private TAte _ate_;
    private PNumeroInteiro _numeroInteiro_;
    private PParaSubPasso _paraSubPasso_;

    public APSubAteParaSub()
    {
        // Constructor
    }

    public APSubAteParaSub(
        @SuppressWarnings("hiding") TAte _ate_,
        @SuppressWarnings("hiding") PNumeroInteiro _numeroInteiro_,
        @SuppressWarnings("hiding") PParaSubPasso _paraSubPasso_)
    {
        // Constructor
        setAte(_ate_);

        setNumeroInteiro(_numeroInteiro_);

        setParaSubPasso(_paraSubPasso_);

    }

    @Override
    public Object clone()
    {
        return new APSubAteParaSub(
            cloneNode(this._ate_),
            cloneNode(this._numeroInteiro_),
            cloneNode(this._paraSubPasso_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPSubAteParaSub(this);
    }

    public TAte getAte()
    {
        return this._ate_;
    }

    public void setAte(TAte node)
    {
        if(this._ate_ != null)
        {
            this._ate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ate_ = node;
    }

    public PNumeroInteiro getNumeroInteiro()
    {
        return this._numeroInteiro_;
    }

    public void setNumeroInteiro(PNumeroInteiro node)
    {
        if(this._numeroInteiro_ != null)
        {
            this._numeroInteiro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numeroInteiro_ = node;
    }

    public PParaSubPasso getParaSubPasso()
    {
        return this._paraSubPasso_;
    }

    public void setParaSubPasso(PParaSubPasso node)
    {
        if(this._paraSubPasso_ != null)
        {
            this._paraSubPasso_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._paraSubPasso_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ate_)
            + toString(this._numeroInteiro_)
            + toString(this._paraSubPasso_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ate_ == child)
        {
            this._ate_ = null;
            return;
        }

        if(this._numeroInteiro_ == child)
        {
            this._numeroInteiro_ = null;
            return;
        }

        if(this._paraSubPasso_ == child)
        {
            this._paraSubPasso_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ate_ == oldChild)
        {
            setAte((TAte) newChild);
            return;
        }

        if(this._numeroInteiro_ == oldChild)
        {
            setNumeroInteiro((PNumeroInteiro) newChild);
            return;
        }

        if(this._paraSubPasso_ == oldChild)
        {
            setParaSubPasso((PParaSubPasso) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
