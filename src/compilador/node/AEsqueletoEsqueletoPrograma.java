/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.node;

import java.util.*;
import compilador.analysis.*;

@SuppressWarnings("nls")
public final class AEsqueletoEsqueletoPrograma extends PEsqueletoPrograma
{
    private TPrograma _programa_;
    private TIdentificador _identificador_;
    private TPontoEVirgula _pontoEVirgula_;
    private final LinkedList<PParteDeclaracao> _parteDeclaracao_ = new LinkedList<PParteDeclaracao>();
    private TInicio _inicio_;
    private final LinkedList<PParteComandos> _parteComandos_ = new LinkedList<PParteComandos>();
    private TFimPonto _fimPonto_;

    public AEsqueletoEsqueletoPrograma()
    {
        // Constructor
    }

    public AEsqueletoEsqueletoPrograma(
        @SuppressWarnings("hiding") TPrograma _programa_,
        @SuppressWarnings("hiding") TIdentificador _identificador_,
        @SuppressWarnings("hiding") TPontoEVirgula _pontoEVirgula_,
        @SuppressWarnings("hiding") List<?> _parteDeclaracao_,
        @SuppressWarnings("hiding") TInicio _inicio_,
        @SuppressWarnings("hiding") List<?> _parteComandos_,
        @SuppressWarnings("hiding") TFimPonto _fimPonto_)
    {
        // Constructor
        setPrograma(_programa_);

        setIdentificador(_identificador_);

        setPontoEVirgula(_pontoEVirgula_);

        setParteDeclaracao(_parteDeclaracao_);

        setInicio(_inicio_);

        setParteComandos(_parteComandos_);

        setFimPonto(_fimPonto_);

    }

    @Override
    public Object clone()
    {
        return new AEsqueletoEsqueletoPrograma(
            cloneNode(this._programa_),
            cloneNode(this._identificador_),
            cloneNode(this._pontoEVirgula_),
            cloneList(this._parteDeclaracao_),
            cloneNode(this._inicio_),
            cloneList(this._parteComandos_),
            cloneNode(this._fimPonto_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEsqueletoEsqueletoPrograma(this);
    }

    public TPrograma getPrograma()
    {
        return this._programa_;
    }

    public void setPrograma(TPrograma node)
    {
        if(this._programa_ != null)
        {
            this._programa_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._programa_ = node;
    }

    public TIdentificador getIdentificador()
    {
        return this._identificador_;
    }

    public void setIdentificador(TIdentificador node)
    {
        if(this._identificador_ != null)
        {
            this._identificador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identificador_ = node;
    }

    public TPontoEVirgula getPontoEVirgula()
    {
        return this._pontoEVirgula_;
    }

    public void setPontoEVirgula(TPontoEVirgula node)
    {
        if(this._pontoEVirgula_ != null)
        {
            this._pontoEVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoEVirgula_ = node;
    }

    public LinkedList<PParteDeclaracao> getParteDeclaracao()
    {
        return this._parteDeclaracao_;
    }

    public void setParteDeclaracao(List<?> list)
    {
        for(PParteDeclaracao e : this._parteDeclaracao_)
        {
            e.parent(null);
        }
        this._parteDeclaracao_.clear();

        for(Object obj_e : list)
        {
            PParteDeclaracao e = (PParteDeclaracao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._parteDeclaracao_.add(e);
        }
    }

    public TInicio getInicio()
    {
        return this._inicio_;
    }

    public void setInicio(TInicio node)
    {
        if(this._inicio_ != null)
        {
            this._inicio_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inicio_ = node;
    }

    public LinkedList<PParteComandos> getParteComandos()
    {
        return this._parteComandos_;
    }

    public void setParteComandos(List<?> list)
    {
        for(PParteComandos e : this._parteComandos_)
        {
            e.parent(null);
        }
        this._parteComandos_.clear();

        for(Object obj_e : list)
        {
            PParteComandos e = (PParteComandos) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._parteComandos_.add(e);
        }
    }

    public TFimPonto getFimPonto()
    {
        return this._fimPonto_;
    }

    public void setFimPonto(TFimPonto node)
    {
        if(this._fimPonto_ != null)
        {
            this._fimPonto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fimPonto_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._programa_)
            + toString(this._identificador_)
            + toString(this._pontoEVirgula_)
            + toString(this._parteDeclaracao_)
            + toString(this._inicio_)
            + toString(this._parteComandos_)
            + toString(this._fimPonto_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._programa_ == child)
        {
            this._programa_ = null;
            return;
        }

        if(this._identificador_ == child)
        {
            this._identificador_ = null;
            return;
        }

        if(this._pontoEVirgula_ == child)
        {
            this._pontoEVirgula_ = null;
            return;
        }

        if(this._parteDeclaracao_.remove(child))
        {
            return;
        }

        if(this._inicio_ == child)
        {
            this._inicio_ = null;
            return;
        }

        if(this._parteComandos_.remove(child))
        {
            return;
        }

        if(this._fimPonto_ == child)
        {
            this._fimPonto_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._programa_ == oldChild)
        {
            setPrograma((TPrograma) newChild);
            return;
        }

        if(this._identificador_ == oldChild)
        {
            setIdentificador((TIdentificador) newChild);
            return;
        }

        if(this._pontoEVirgula_ == oldChild)
        {
            setPontoEVirgula((TPontoEVirgula) newChild);
            return;
        }

        for(ListIterator<PParteDeclaracao> i = this._parteDeclaracao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PParteDeclaracao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._inicio_ == oldChild)
        {
            setInicio((TInicio) newChild);
            return;
        }

        for(ListIterator<PParteComandos> i = this._parteComandos_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PParteComandos) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._fimPonto_ == oldChild)
        {
            setFimPonto((TFimPonto) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
