/* This file was generated by SableCC (http://www.sablecc.org/). */

package compilador.analysis;

import compilador.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTNumero(TNumero node);
    void caseTCommentLine(TCommentLine node);
    void caseTComentBloco(TComentBloco node);
    void caseTNomePrograma(TNomePrograma node);
    void caseTString(TString node);
    void caseTEspaco(TEspaco node);
    void caseTQuebra(TQuebra node);
    void caseTMais(TMais node);
    void caseTMenos(TMenos node);
    void caseTBarra(TBarra node);
    void caseTEstrela(TEstrela node);
    void caseTMenor(TMenor node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTMaior(TMaior node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTSeta(TSeta node);
    void caseTIgualIgual(TIgualIgual node);
    void caseTDiferente(TDiferente node);
    void caseTIgual(TIgual node);
    void caseTPontoEVirgula(TPontoEVirgula node);
    void caseTVirgula(TVirgula node);
    void caseTAbreParen(TAbreParen node);
    void caseTFechaParen(TFechaParen node);
    void caseTAbreColchete(TAbreColchete node);
    void caseTFechaColchete(TFechaColchete node);
    void caseTAbreChave(TAbreChave node);
    void caseTFechaChave(TFechaChave node);
    void caseTAbreComent(TAbreComent node);
    void caseTFechaComent(TFechaComent node);
    void caseTPonto(TPonto node);
    void caseTDoispontos(TDoispontos node);
    void caseTEscreva(TEscreva node);
    void caseTPrograma(TPrograma node);
    void caseTVar(TVar node);
    void caseTInicio(TInicio node);
    void caseTFimPonto(TFimPonto node);
    void caseTSe(TSe node);
    void caseTFimSe(TFimSe node);
    void caseTFimEnquanto(TFimEnquanto node);
    void caseTFim(TFim node);
    void caseTEnquanto(TEnquanto node);
    void caseTEntao(TEntao node);
    void caseTReal(TReal node);
    void caseTInteiro(TInteiro node);
    void caseTCaractere(TCaractere node);
    void caseTLogico(TLogico node);
    void caseTTipo(TTipo node);
    void caseTIdentificador(TIdentificador node);
    void caseTCharIgnored(TCharIgnored node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
